{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React from 'react';\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport LayoutAnimation from \"react-native-web/dist/exports/LayoutAnimation\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PropTypes = require('prop-types');\nvar ANIM_DURATION = 300;\nvar UIManager = NativeModules.UIManager;\nif (Platform.OS === 'android') {\n  if (UIManager.setLayoutAnimationEnabledExperimental) {\n    UIManager.setLayoutAnimationEnabledExperimental(true);\n  }\n}\nvar AnySizeDragSortableView = function (_React$PureComponent) {\n  _inherits(AnySizeDragSortableView, _React$PureComponent);\n  var _super = _createSuper(AnySizeDragSortableView);\n  function AnySizeDragSortableView(props) {\n    var _this;\n    _classCallCheck(this, AnySizeDragSortableView);\n    _this = _super.call(this, props);\n    _this.autoMeasureHeight = function () {\n      if (!_this.isHasMeasure) {\n        setTimeout(function () {\n          _this.scrollTo(1, false);\n          _this.scrollTo(0, false);\n        }, 30);\n      }\n    };\n    _this.initTag = function () {\n      _this.clearAutoInterval();\n      _this.autoObj = {\n        curDy: 0,\n        scrollDx: 0,\n        scrollDy: 0,\n        hasScrollDy: null,\n        forceScrollStatus: 0\n      };\n    };\n    _this.isStartupAuto = function () {\n      if (_this.curScrollData == null) {\n        return false;\n      }\n      return true;\n    };\n    _this.dealtScrollStatus = function () {\n      var scrollData = _this.curScrollData;\n      if (scrollData == null || scrollData.offsetY == null) return;\n      var totalHeight = scrollData.totalHeight,\n        windowHeight = scrollData.windowHeight,\n        offsetY = scrollData.offsetY;\n      if (totalHeight <= windowHeight + offsetY) {\n        _this.autoObj.forceScrollStatus = -2;\n      } else if (offsetY <= 0) {\n        _this.autoObj.forceScrollStatus = 2;\n      }\n    };\n    _this.clearAutoInterval = function () {\n      if (_this.autoInterval) {\n        clearInterval(_this.autoInterval);\n        _this.autoInterval = null;\n      }\n    };\n    _this.startAutoScroll = function () {\n      if (_this.autoInterval != null) {\n        return;\n      }\n      _this.autoInterval = setInterval(function () {\n        if (_this.autoObj.forceScrollStatus === 0 || _this.autoObj.forceScrollStatus === 2 || _this.autoObj.forceScrollStatus === -2) {\n          _this.clearAutoInterval();\n          return;\n        }\n        if (!_this.curScrollData.hasScroll) {\n          return;\n        }\n        if (_this.autoObj.forceScrollStatus === 1) {\n          _this.autoObj.scrollDy = _this.autoObj.scrollDy + _this.props.autoThrottle;\n        } else if (_this.autoObj.forceScrollStatus === -1) {\n          _this.autoObj.scrollDy = _this.autoObj.scrollDy - _this.props.autoThrottle;\n        }\n        _this.scrollTo(_this.autoObj.scrollDy, false);\n        _this.dealtScrollStatus();\n        if (Platform.OS === 'android') {\n          setTimeout(function () {\n            if (_this.isHasMove) _this.moveTouch(null, _objectSpread(_objectSpread({}, _this.preGestureState || {}), {}, {\n              dx: _this.autoObj.scrollDx,\n              dy: _this.autoObj.curDy + _this.autoObj.scrollDy\n            }));\n          }, 1);\n        } else {\n          _this.moveTouch(null, _objectSpread(_objectSpread({}, _this.preGestureState || {}), {}, {\n            dx: _this.autoObj.scrollDx,\n            dy: _this.autoObj.curDy + _this.autoObj.scrollDy\n          }));\n        }\n      }, _this.props.autoThrottleDuration);\n    };\n    _this.startTouch = function (item, index) {\n      var _this$props = _this.props,\n        keyExtractor = _this$props.keyExtractor,\n        headerViewHeight = _this$props.headerViewHeight;\n      _this.isHasMove = false;\n      _this.isHasMeasure = true;\n      _this.preMoveKeyObj = null;\n      if (_this.isStartupAuto()) {\n        _this.autoObj.scrollDy = _this.autoObj.hasScrollDy = _this.curScrollData.offsetY;\n      }\n      var key = keyExtractor(item, index);\n      var curLayout = _this.layoutMap.get(key);\n      var firstOffsetY = _this.curScrollData && _this.curScrollData.offsetY || 0;\n      var initTop = parseInt(curLayout.y - firstOffsetY + headerViewHeight + 0.5);\n      _this.setState({\n        scrollEnabled: false,\n        selectedItem: item,\n        selectedKey: key,\n        selectedOriginLayout: _objectSpread({}, curLayout),\n        selectedPosition: {\n          left: parseInt(curLayout.x + 0.5),\n          top: initTop,\n          initTop: initTop,\n          width: curLayout.width,\n          height: curLayout.height\n        }\n      }, function () {\n        _this.isMovePanResponder = true;\n      });\n    };\n    _this.moveTouch = function (nativeEvent, gestureState) {\n      _this.isHasMove = true;\n      if (nativeEvent) {\n        _this.preGestureState = gestureState;\n      }\n      var _this$state = _this.state,\n        selectedKey = _this$state.selectedKey,\n        selectedOriginLayout = _this$state.selectedOriginLayout,\n        selectedPosition = _this$state.selectedPosition;\n      var _this$props2 = _this.props,\n        areaOverlapRatio = _this$props2.areaOverlapRatio,\n        headerViewHeight = _this$props2.headerViewHeight,\n        childMarginTop = _this$props2.childMarginTop,\n        childMarginBottom = _this$props2.childMarginBottom,\n        childMarginLeft = _this$props2.childMarginLeft,\n        childMarginRight = _this$props2.childMarginRight;\n      var curLayout = _this.layoutMap.get(selectedKey);\n      var dx = gestureState.dx,\n        dy = gestureState.dy,\n        vy = gestureState.vy,\n        moveY = gestureState.moveY,\n        y0 = gestureState.y0;\n      if (!selectedOriginLayout) return;\n      if (_this.isStartupAuto()) {\n        var curDis = selectedOriginLayout.y + dy - _this.autoObj.hasScrollDy;\n        if (nativeEvent != null) {\n          var tempStatus = _this.autoObj.forceScrollStatus;\n          var minDownDiss = curDis + selectedPosition.height + headerViewHeight;\n          var maxUpDiss = curDis + headerViewHeight;\n          if ((tempStatus === 0 || tempStatus === 2) && vy > 0.01 && minDownDiss > _this.curScrollData.windowHeight) {\n            _this.autoObj.curDy = dy;\n            _this.autoObj.forceScrollStatus = 1;\n            _this.startAutoScroll();\n          } else if ((tempStatus === 0 || tempStatus === -2) && -vy > 0.01 && maxUpDiss < 0) {\n            _this.autoObj.curDy = dy;\n            _this.autoObj.forceScrollStatus = -1;\n            _this.startAutoScroll();\n          }\n        }\n        if (vy != null) {\n          if (_this.autoObj.forceScrollStatus >= 1 && -vy > 0.01) {\n            _this.autoObj.forceScrollStatus = 0;\n          } else if (_this.autoObj.forceScrollStatus <= -1 && vy > 0.01) {\n            _this.autoObj.forceScrollStatus = 0;\n          }\n        }\n        _this.autoObj.scrollDx = dx;\n        dy = dy - _this.autoObj.hasScrollDy;\n        if (nativeEvent != null) {\n          dy = dy + _this.autoObj.scrollDy;\n          if (_this.autoObj.forceScrollStatus === 1 || _this.autoObj.forceScrollStatus === -1) {\n            return;\n          }\n        }\n      }\n      if (!_this.isUpdating) {\n        var moveX1 = selectedOriginLayout.x + dx + childMarginLeft;\n        var moveX2 = moveX1 + selectedOriginLayout.width - childMarginRight;\n        var moveY1 = selectedOriginLayout.y + dy + childMarginTop;\n        var moveY2 = moveY1 + selectedOriginLayout.height - childMarginBottom;\n        var nextLineY = curLayout.y + curLayout.height;\n        var moveArea = selectedOriginLayout.width * selectedOriginLayout.height;\n        var layouts = _this.layoutMap.values();\n        var nextLineLastLayout = null;\n        for (var layout of layouts) {\n          var tempX1 = layout.x + childMarginLeft;\n          var tempX2 = tempX1 + layout.width - childMarginRight;\n          var tempY1 = layout.y + childMarginTop;\n          var tempY2 = tempY1 + layout.height - childMarginBottom;\n          if (nextLineY === layout.y && (!nextLineLastLayout || nextLineLastLayout.x < layout.x)) {\n            nextLineLastLayout = layout;\n          }\n          if (layout.key === curLayout.key) continue;\n          var w = Math.min(moveX2, tempX2) - Math.max(moveX1, tempX1);\n          var h = Math.min(moveY2, tempY2) - Math.max(moveY1, tempY1);\n          if (w <= 0 || h <= 0) continue;\n          var overlapArea = w * h;\n          var minArea = Math.min(layout.width * layout.height, moveArea);\n          if (overlapArea < minArea * areaOverlapRatio || !overlapArea) continue;\n          _this.move(curLayout.key, layout.key, vy, curLayout.y !== layout.y);\n          break;\n        }\n        if (!_this.isUpdating && nextLineLastLayout && moveX1 >= nextLineLastLayout.x + nextLineLastLayout.width && (moveY2 + moveY1) / 2 > nextLineLastLayout.y) {\n          _this.move(curLayout.key, nextLineLastLayout.key, vy, curLayout.y !== nextLineLastLayout.y);\n        }\n      }\n      var preLeft = selectedPosition.left;\n      var preTop = selectedPosition.top;\n      var nextLeft = parseInt(selectedOriginLayout.x + dx + 0.5);\n      var nextTop = parseInt(selectedPosition.initTop + (moveY - y0) + 0.5);\n      if (preLeft !== nextLeft || preTop !== nextTop) {\n        _this.setState({\n          selectedPosition: _objectSpread(_objectSpread({}, selectedPosition), {}, {\n            left: nextLeft,\n            top: nextTop\n          })\n        });\n      }\n    };\n    _this.move = function (fromKey, toKey, vy, isDiffline) {\n      _this.isUpdating = true;\n      var _this$props3 = _this.props,\n        onDataChange = _this$props3.onDataChange,\n        dataSource = _this$props3.dataSource;\n      var length = dataSource.length;\n      var fromIndex = _this.keyToIndexMap.get(fromKey);\n      var toIndex = _this.keyToIndexMap.get(toKey);\n      if (fromIndex < 0 || fromIndex >= length || toIndex < 0 || toIndex >= length) {\n        _this.isUpdating = false;\n        return;\n      }\n      if (_this.preMoveKeyObj && _this.preMoveKeyObj.fromKey === fromKey && _this.preMoveKeyObj.toKey === toKey && isDiffline && (toIndex - fromIndex > 0 && vy <= 0.01 || toIndex - fromIndex < 0 && vy >= -0.01)) {\n        _this.isUpdating = false;\n        return;\n      }\n      _this.preMoveKeyObj = {\n        fromKey: fromKey,\n        toKey: toKey\n      };\n      var newDataSource = _toConsumableArray(dataSource);\n      var deleteItem = newDataSource.splice(fromIndex, 1);\n      LayoutAnimation.configureNext(LayoutAnimation.create(ANIM_DURATION, LayoutAnimation.Types.linear, LayoutAnimation.Properties.opacity));\n      newDataSource.splice(toIndex, 0, deleteItem[0]);\n      onDataChange(newDataSource, function () {\n        setTimeout(function () {\n          _this.isUpdating = false;\n        }, ANIM_DURATION);\n      });\n    };\n    _this.endTouch = function (evt) {\n      _this.isHasMove = false;\n      _this.initTag();\n      if (_this.props.onDragEnd) _this.props.onDragEnd();\n      _this.setState({\n        selectedItem: null,\n        selectedKey: null,\n        selectedOriginLayout: null,\n        selectedPosition: null,\n        scrollEnabled: true\n      });\n    };\n    _this._setLayoutData = function (key, event) {\n      _this.layoutMap.set(key, _objectSpread(_objectSpread({}, event.nativeEvent.layout), {}, {\n        key: key\n      }));\n    };\n    _this.scrollTo = function (height) {\n      var animated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      if (_this.curScrollData) {\n        if (_this.autoObj.forceScrollStatus < 0 && _this.curScrollData.offsetY <= 0) {\n          _this.autoObj.scrollDy = 0;\n          return;\n        } else if (_this.autoObj.forceScrollStatus > 0 && _this.curScrollData.windowHeight + _this.curScrollData.offsetY >= _this.curScrollData.totalHeight) {\n          _this.autoObj.scrollDy = _this.curScrollData.offsetY;\n          return;\n        }\n        _this.curScrollData.hasScroll = false;\n      }\n      _this.scrollRef && _this.scrollRef.scrollTo({\n        x: 0,\n        y: height,\n        animated: animated\n      });\n    };\n    _this.onScrollListener = function (event) {\n      var nativeEvent = event.nativeEvent;\n      _this.curScrollData = {\n        totalHeight: nativeEvent.contentSize.height,\n        windowHeight: nativeEvent.layoutMeasurement.height,\n        offsetY: nativeEvent.contentOffset.y,\n        hasScroll: true\n      };\n      if (nativeEvent.contentOffset.y !== 0) _this.isHasMeasure = true;\n      if (_this.props.onScrollListener) _this.props.onScrollListener(event);\n    };\n    _this.layoutMap = new Map();\n    _this.keyToIndexMap = new Map();\n    _this._panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: function onStartShouldSetPanResponder(evt, gestureState) {\n        return true;\n      },\n      onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture(evt, gestureState) {\n        _this.isMovePanResponder = false;\n        return false;\n      },\n      onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder(evt, gestureState) {\n        return _this.isMovePanResponder;\n      },\n      onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture(evt, gestureState) {\n        return _this.isMovePanResponder;\n      },\n      onPanResponderGrant: function onPanResponderGrant(evt, gestureState) {},\n      onPanResponderMove: function onPanResponderMove(evt, gestureState) {\n        return _this.moveTouch(evt, gestureState);\n      },\n      onPanResponderRelease: function onPanResponderRelease(evt, gestureState) {\n        return _this.endTouch(evt);\n      },\n      onPanResponderTerminationRequest: function onPanResponderTerminationRequest(evt, gestureState) {\n        return false;\n      },\n      onShouldBlockNativeResponder: function onShouldBlockNativeResponder(evt, gestureState) {\n        return false;\n      }\n    });\n    _this.state = {\n      selectedItem: null,\n      selectedKey: null,\n      selectedOriginLayout: null,\n      selectedPosition: null,\n      scrollEnabled: true\n    };\n    return _this;\n  }\n  _createClass(AnySizeDragSortableView, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.isScaleRecovery) clearTimeout(this.isScaleRecovery);\n      this.clearAutoInterval();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.initTag();\n      this.autoMeasureHeight();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.autoMeasureHeight();\n    }\n  }, {\n    key: \"onPressOut\",\n    value: function onPressOut() {\n      var _this2 = this;\n      this.isScaleRecovery = setTimeout(function () {\n        if (_this2.isMovePanResponder && !_this2.isHasMove) {\n          _this2.endTouch();\n        }\n      }, 220);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      var _this$state2 = this.state,\n        selectedItem = _this$state2.selectedItem,\n        selectedPosition = _this$state2.selectedPosition,\n        scrollEnabled = _this$state2.scrollEnabled;\n      var _this$props4 = this.props,\n        dataSource = _this$props4.dataSource,\n        keyExtractor = _this$props4.keyExtractor,\n        renderItem = _this$props4.renderItem,\n        movedWrapStyle = _this$props4.movedWrapStyle;\n      return _jsxs(View, {\n        style: styles.box,\n        children: [selectedPosition && _jsx(View, {\n          style: [movedWrapStyle, {\n            left: selectedPosition.left,\n            top: selectedPosition.top,\n            position: 'absolute',\n            zIndex: 999\n          }],\n          children: renderItem(selectedItem, null, true)\n        }), _jsxs(ScrollView, {\n          bounces: false,\n          scrollEventThrottle: 1,\n          scrollIndicatorInsets: this.props.scrollIndicatorInsets,\n          ref: function ref(scrollRef) {\n            if (_this3.props.onScrollRef) _this3.props.onScrollRef(scrollRef);\n            _this3.scrollRef = scrollRef;\n            return _this3.scrollRef;\n          },\n          scrollEnabled: scrollEnabled,\n          onScroll: this.onScrollListener,\n          style: styles.scroll,\n          children: [this.props.renderHeaderView ? this.props.renderHeaderView : null, _jsx(View, {\n            style: styles.container,\n            children: dataSource.map(function (item, index) {\n              var key = keyExtractor(item, index);\n              _this3.keyToIndexMap.set(key, index);\n              return _jsx(View, _objectSpread(_objectSpread({}, _this3._panResponder.panHandlers), {}, {\n                onLayout: function onLayout(event) {\n                  return _this3._setLayoutData(key, event);\n                },\n                children: renderItem(item, index, false)\n              }), key);\n            })\n          }), this.props.renderBottomView ? this.props.renderBottomView : null]\n        })]\n      });\n    }\n  }]);\n  return AnySizeDragSortableView;\n}(React.PureComponent);\nexport { AnySizeDragSortableView as default };\nAnySizeDragSortableView.propTypes = {\n  dataSource: PropTypes.array.isRequired,\n  keyExtractor: PropTypes.func.isRequired,\n  renderItem: PropTypes.func.isRequired,\n  onDataChange: PropTypes.func,\n  headerViewHeight: PropTypes.number,\n  renderBottomView: PropTypes.element,\n  bottomViewHeight: PropTypes.number,\n  renderHeaderView: PropTypes.element,\n  autoThrottle: PropTypes.number,\n  onDragEnd: PropTypes.func,\n  autoThrottleDuration: PropTypes.number,\n  scrollIndicatorInsets: PropTypes.shape({\n    top: PropTypes.number,\n    left: PropTypes.number,\n    bottom: PropTypes.number,\n    right: PropTypes.number\n  }),\n  onScrollListener: PropTypes.func,\n  onScrollRef: PropTypes.func,\n  areaOverlapRatio: PropTypes.number,\n  movedWrapStyle: PropTypes.object,\n  childMarginTop: PropTypes.number,\n  childMarginBottom: PropTypes.number,\n  childMarginLeft: PropTypes.number,\n  childMarginRight: PropTypes.number\n};\nAnySizeDragSortableView.defaultProps = {\n  areaOverlapRatio: 0.55,\n  autoThrottle: 2,\n  autoThrottleDuration: 10,\n  scrollIndicatorInsets: {\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 1\n  },\n  headerViewHeight: 0,\n  bottomViewHeight: 0,\n  movedWrapStyle: {\n    backgroundColor: 'blue',\n    zIndex: 999\n  },\n  childMarginTop: 10,\n  childMarginBottom: 10,\n  childMarginLeft: 10,\n  childMarginRight: 10\n};\nvar styles = StyleSheet.create({\n  box: {\n    flex: 1,\n    position: 'relative'\n  },\n  scroll: {\n    flex: 1\n  },\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  }\n});","map":{"version":3,"names":["React","NativeModules","StyleSheet","ScrollView","View","PanResponder","LayoutAnimation","Platform","jsx","_jsx","jsxs","_jsxs","PropTypes","require","ANIM_DURATION","UIManager","OS","setLayoutAnimationEnabledExperimental","AnySizeDragSortableView","_React$PureComponent","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","autoMeasureHeight","isHasMeasure","setTimeout","scrollTo","initTag","clearAutoInterval","autoObj","curDy","scrollDx","scrollDy","hasScrollDy","forceScrollStatus","isStartupAuto","curScrollData","dealtScrollStatus","scrollData","offsetY","totalHeight","windowHeight","autoInterval","clearInterval","startAutoScroll","setInterval","hasScroll","autoThrottle","isHasMove","moveTouch","_objectSpread","preGestureState","dx","dy","autoThrottleDuration","startTouch","item","index","_this$props","keyExtractor","headerViewHeight","preMoveKeyObj","key","curLayout","layoutMap","get","firstOffsetY","initTop","parseInt","y","setState","scrollEnabled","selectedItem","selectedKey","selectedOriginLayout","selectedPosition","left","x","top","width","height","isMovePanResponder","nativeEvent","gestureState","_this$state","state","_this$props2","areaOverlapRatio","childMarginTop","childMarginBottom","childMarginLeft","childMarginRight","vy","moveY","y0","curDis","tempStatus","minDownDiss","maxUpDiss","isUpdating","moveX1","moveX2","moveY1","moveY2","nextLineY","moveArea","layouts","values","nextLineLastLayout","layout","tempX1","tempX2","tempY1","tempY2","w","Math","min","max","h","overlapArea","minArea","move","preLeft","preTop","nextLeft","nextTop","fromKey","toKey","isDiffline","_this$props3","onDataChange","dataSource","length","fromIndex","keyToIndexMap","toIndex","newDataSource","_toConsumableArray","deleteItem","splice","configureNext","create","Types","linear","Properties","opacity","endTouch","evt","onDragEnd","_setLayoutData","event","set","animated","arguments","undefined","scrollRef","onScrollListener","contentSize","layoutMeasurement","contentOffset","Map","_panResponder","onStartShouldSetPanResponder","onStartShouldSetPanResponderCapture","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderGrant","onPanResponderMove","onPanResponderRelease","onPanResponderTerminationRequest","onShouldBlockNativeResponder","_createClass","value","componentWillUnmount","isScaleRecovery","clearTimeout","componentDidMount","componentDidUpdate","onPressOut","_this2","render","_this3","_this$state2","_this$props4","renderItem","movedWrapStyle","style","styles","box","children","position","zIndex","bounces","scrollEventThrottle","scrollIndicatorInsets","ref","onScrollRef","onScroll","scroll","renderHeaderView","container","map","panHandlers","onLayout","renderBottomView","PureComponent","default","propTypes","array","isRequired","func","number","element","bottomViewHeight","shape","bottom","right","object","defaultProps","backgroundColor","flex","flexDirection","flexWrap"],"sources":["/home/cballard@int.integrity.com/public_html/formBuilder/frontendFormBuilder/node_modules/react-native-drag-sort/AnySizeDragSortableView.js"],"sourcesContent":["import React from 'react';\nimport {\n  NativeModules,\n  StyleSheet,\n  ScrollView,\n  View,\n  PanResponder,\n  LayoutAnimation,\n  Platform\n} from 'react-native';\nconst PropTypes = require('prop-types')\nconst ANIM_DURATION = 300\nconst { UIManager } = NativeModules;\n\nif (Platform.OS === 'android') {\n  if (UIManager.setLayoutAnimationEnabledExperimental) {\n    UIManager.setLayoutAnimationEnabledExperimental(true);\n  }\n}\n\nexport default class AnySizeDragSortableView extends React.PureComponent {\n\n  constructor(props) {\n    super(props)\n\n    this.layoutMap = new Map();\n    this.keyToIndexMap = new Map();\n\n    this._panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: (evt, gestureState) => true,\n      onStartShouldSetPanResponderCapture: (evt, gestureState) => {\n        this.isMovePanResponder = false;\n        return false;\n      },\n      onMoveShouldSetPanResponder: (evt, gestureState) => this.isMovePanResponder,\n      onMoveShouldSetPanResponderCapture: (evt, gestureState) => this.isMovePanResponder,\n      onPanResponderGrant: (evt, gestureState) => {},\n      onPanResponderMove: (evt, gestureState) => this.moveTouch(evt, gestureState),\n      onPanResponderRelease: (evt, gestureState) => this.endTouch(evt),\n      onPanResponderTerminationRequest: (evt, gestureState) => false,\n      onShouldBlockNativeResponder: (evt, gestureState) => false,\n    });\n\n    this.state = {\n      selectedItem: null,\n      selectedKey: null,\n      selectedOriginLayout: null,\n      selectedPosition: null,\n\n      scrollEnabled: true\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.isScaleRecovery) clearTimeout(this.isScaleRecovery)\n     this.clearAutoInterval()\n  }\n\n  componentDidMount() {\n    this.initTag()\n    this.autoMeasureHeight()\n  }\n\n  componentDidUpdate() {\n    this.autoMeasureHeight()\n  }\n\n  // Compatible with different systems and paging loading\n  autoMeasureHeight = () => {\n    if (!this.isHasMeasure) {\n      setTimeout(() => {\n        this.scrollTo(1, false)\n        this.scrollTo(0, false)\n      }, 30)\n    }\n  }\n\n  // Initialization tag\n  initTag = () => {\n    this.clearAutoInterval();\n    this.autoObj = {\n      curDy: 0,\n      scrollDx: 0,\n      scrollDy: 0,\n      hasScrollDy: null,\n      forceScrollStatus: 0, // 0: NONE 1: DOWN 2: ONLY_DOWN -1: UP -2: ONLY_UP\n    }\n  }\n\n  isStartupAuto = () => {\n    if (this.curScrollData == null) {\n      return false;\n    }\n    return true;\n  }\n\n  // Unified processing\n  dealtScrollStatus = () => {\n    const scrollData = this.curScrollData;\n    if (scrollData == null || scrollData.offsetY == null) return;\n    const {\n      totalHeight,\n      windowHeight,\n      offsetY\n    } = scrollData;\n    if (totalHeight <= windowHeight + offsetY) {\n      this.autoObj.forceScrollStatus = -2;\n    } else if (offsetY <= 0) {\n      this.autoObj.forceScrollStatus = 2;\n    }\n  }\n\n  // Handle automatic slide timer\n  clearAutoInterval = () => {\n    if (this.autoInterval) {\n      clearInterval(this.autoInterval);\n      this.autoInterval = null;\n    }\n  }\n\n  startAutoScroll = () => {\n    if (this.autoInterval != null) {\n      return;\n    }\n\n    // Start automatic swipe\n    this.autoInterval = setInterval(() => {\n      if (this.autoObj.forceScrollStatus === 0 ||\n        this.autoObj.forceScrollStatus === 2 ||\n        this.autoObj.forceScrollStatus === -2) {\n        this.clearAutoInterval();\n        return;\n      }\n      // Anti-shake 1.x1\n      if (!this.curScrollData.hasScroll) {\n        return;\n      }\n      if (this.autoObj.forceScrollStatus === 1) {\n        this.autoObj.scrollDy = this.autoObj.scrollDy + this.props.autoThrottle;\n      } else if (this.autoObj.forceScrollStatus === -1) {\n        this.autoObj.scrollDy = this.autoObj.scrollDy - this.props.autoThrottle;\n      }\n      this.scrollTo(this.autoObj.scrollDy, false);\n      this.dealtScrollStatus();\n      // Android slide time 30ms-50ms, iOS close to 0ms, optimize Android jitter\n      if (Platform.OS === 'android') {\n        setTimeout(() => {\n          if (this.isHasMove) this.moveTouch(null, {\n             ...(this.preGestureState || {}),\n            dx: this.autoObj.scrollDx,\n            dy: this.autoObj.curDy + this.autoObj.scrollDy\n          })\n        }, 1)\n      } else {\n        this.moveTouch(null, {\n          ...(this.preGestureState || {}),\n          dx: this.autoObj.scrollDx,\n          dy: this.autoObj.curDy + this.autoObj.scrollDy\n        })\n      }\n\n    }, this.props.autoThrottleDuration)\n  }\n\n  startTouch = (item, index) => {\n    const {keyExtractor, headerViewHeight} = this.props\n    this.isHasMove = false\n    this.isHasMeasure = true\n    this.preMoveKeyObj = null\n    // Initialization data\n    if (this.isStartupAuto()) {\n      this.autoObj.scrollDy = this.autoObj.hasScrollDy = this.curScrollData.offsetY;\n    }\n    const key = keyExtractor(item, index);\n    const curLayout = this.layoutMap.get(key)\n    const firstOffsetY = (this.curScrollData && this.curScrollData.offsetY) || 0\n    const initTop = parseInt(curLayout.y - firstOffsetY + headerViewHeight + 0.5)\n    this.setState({ \n      scrollEnabled: false,\n      selectedItem: item,\n      selectedKey: key,\n      selectedOriginLayout: {...curLayout},\n      selectedPosition: {\n        left: parseInt(curLayout.x+0.5),\n        top: initTop,\n        initTop,\n        width: curLayout.width,\n        height: curLayout.height\n      }\n    }, () => {\n      this.isMovePanResponder = true\n    })\n  };\n\n  moveTouch = (nativeEvent, gestureState) => {\n    this.isHasMove = true\n    // record\n    if (nativeEvent) {\n      this.preGestureState = gestureState\n    }\n    const { selectedKey, selectedOriginLayout, selectedPosition } = this.state\n    const {\n      areaOverlapRatio, headerViewHeight,\n      childMarginTop, childMarginBottom, childMarginLeft, childMarginRight\n    } = this.props\n    const curLayout = this.layoutMap.get(selectedKey)\n\n    let {dx, dy, vy, moveY, y0} = gestureState;\n\n    if (!selectedOriginLayout) return\n\n    if (this.isStartupAuto()) {\n      const curDis = selectedOriginLayout.y + dy - this.autoObj.hasScrollDy;\n      if (nativeEvent != null) {\n        const tempStatus = this.autoObj.forceScrollStatus;\n        // Automatic sliding\n        const minDownDiss = curDis + selectedPosition.height + headerViewHeight;\n        const maxUpDiss = curDis + headerViewHeight;\n        if ((tempStatus === 0 || tempStatus === 2) && vy > 0.01 && minDownDiss > this.curScrollData.windowHeight) {\n          this.autoObj.curDy = dy;\n          this.autoObj.forceScrollStatus = 1;\n          this.startAutoScroll();\n        } else if ((tempStatus === 0 || tempStatus === -2) && -vy > 0.01 && maxUpDiss < 0) {\n          this.autoObj.curDy = dy;\n          this.autoObj.forceScrollStatus = -1;\n          this.startAutoScroll();\n        }\n      }\n\n      // Determine whether to change steering\n      if (vy != null) {\n        // Slide down 1、2\n        if (this.autoObj.forceScrollStatus >= 1 && -vy > 0.01) {\n          this.autoObj.forceScrollStatus = 0;\n          // Slide up -1、-2\n        } else if (this.autoObj.forceScrollStatus <= -1 && vy > 0.01) {\n          this.autoObj.forceScrollStatus = 0;\n        }\n      }\n\n      // Remember the X axis\n      this.autoObj.scrollDx = dx;\n      // Correction data 1\n      dy = dy - this.autoObj.hasScrollDy;\n      if (nativeEvent != null) {\n        // Correction data 2\n        dy = dy + this.autoObj.scrollDy;\n        // Prevent fingers from sliding when sliding automatically\n        if (this.autoObj.forceScrollStatus === 1 || this.autoObj.forceScrollStatus === -1) {\n          return;\n        }\n      }\n    }\n    if (!this.isUpdating) {\n      const moveX1 = selectedOriginLayout.x + dx + childMarginLeft\n      const moveX2 = moveX1 + selectedOriginLayout.width - childMarginRight\n      const moveY1 = selectedOriginLayout.y + dy + childMarginTop\n      const moveY2 = moveY1 + selectedOriginLayout.height - childMarginBottom\n      const nextLineY = curLayout.y + curLayout.height\n      const moveArea = selectedOriginLayout.width * selectedOriginLayout.height\n      const layouts = this.layoutMap.values()\n      let nextLineLastLayout = null\n      for (let layout of layouts) {\n        const tempX1 = layout.x + childMarginLeft\n        const tempX2 = tempX1 + layout.width - childMarginRight\n        const tempY1 = layout.y + childMarginTop\n        const tempY2 = tempY1 + layout.height - childMarginBottom\n        // record next line Layout start\n        if (nextLineY === layout.y && (!nextLineLastLayout || nextLineLastLayout.x < layout.x)) {\n          nextLineLastLayout = layout\n        }\n        if (layout.key === curLayout.key) continue;\n        const w = Math.min(moveX2, tempX2) - Math.max(moveX1, tempX1)\n        const h = Math.min(moveY2, tempY2) - Math.max(moveY1, tempY1)\n        if (w <= 0 || h <= 0) continue;\n        const overlapArea = w * h\n        const minArea = Math.min(layout.width * layout.height, moveArea)\n        if (overlapArea < minArea * areaOverlapRatio || !overlapArea) continue;\n        this.move(curLayout.key, layout.key, vy, curLayout.y !== layout.y)\n        break\n      }\n      // When sliding to the end, there is no assistance\n      if (!this.isUpdating && nextLineLastLayout && \n        moveX1 >= nextLineLastLayout.x + nextLineLastLayout.width && (moveY2 + moveY1) / 2 > nextLineLastLayout.y\n      ) {\n        this.move(curLayout.key, nextLineLastLayout.key, vy, curLayout.y !== nextLineLastLayout.y)\n      }\n    }\n\n    const preLeft = selectedPosition.left\n    const preTop = selectedPosition.top\n    const nextLeft = parseInt(selectedOriginLayout.x + dx + 0.5)\n    const nextTop = parseInt(selectedPosition.initTop + (moveY - y0) + 0.5)\n\n    if (preLeft !== nextLeft || preTop !== nextTop) {\n      this.setState({\n        selectedPosition: {\n          ...selectedPosition, \n          left: nextLeft,\n          top: nextTop\n        }\n      })\n    }\n  };\n\n  move = (fromKey, toKey, vy, isDiffline) => {\n    this.isUpdating = true\n    const { onDataChange ,dataSource } = this.props\n    const length = dataSource.length\n    const fromIndex = this.keyToIndexMap.get(fromKey)\n    const toIndex = this.keyToIndexMap.get(toKey)\n    if (fromIndex < 0 || fromIndex >= length || toIndex < 0 || toIndex >= length) {\n      this.isUpdating = false\n      return\n    }\n    if (\n      this.preMoveKeyObj && this.preMoveKeyObj.fromKey === fromKey && this.preMoveKeyObj.toKey === toKey && \n      isDiffline && ((toIndex - fromIndex > 0 && vy <= 0.01) || (toIndex - fromIndex < 0 && vy >= -0.01))\n    ) {\n      this.isUpdating = false\n      return\n    }\n    this.preMoveKeyObj = {\n      fromKey, toKey\n    }\n    const newDataSource = [...dataSource];\n    const deleteItem = newDataSource.splice(fromIndex, 1);\n    LayoutAnimation.configureNext(\n      LayoutAnimation.create(\n        ANIM_DURATION,\n        LayoutAnimation.Types.linear,\n        LayoutAnimation.Properties.opacity\n      )\n    );\n    newDataSource.splice(toIndex, 0, deleteItem[0]);\n    onDataChange(newDataSource, () => {\n      setTimeout(() => {\n        this.isUpdating = false\n      }, ANIM_DURATION)\n    })\n  };\n\n  endTouch = (evt) => {\n    this.isHasMove = false;\n    this.initTag()\n    if (this.props.onDragEnd) this.props.onDragEnd()\n    this.setState({\n      selectedItem: null,\n      selectedKey: null,\n      selectedOriginLayout: null,\n      selectedPosition: null,\n      scrollEnabled: true\n    })\n  };\n\n  onPressOut() {\n    this.isScaleRecovery = setTimeout(() => {\n      if (this.isMovePanResponder && !this.isHasMove) {\n        this.endTouch()\n      }\n    }, 220)\n  }\n\n  _setLayoutData = (key, event) => {\n    this.layoutMap.set(key, {...event.nativeEvent.layout, key})\n  }\n\n  scrollTo = (height, animated = true) => {\n    // Prevent iOS from sliding when elastically sliding negative numbers\n    if (this.curScrollData) {\n      if (this.autoObj.forceScrollStatus < 0 && this.curScrollData.offsetY <= 0) {\n        this.autoObj.scrollDy = 0; // Correcting data system deviations\n        return;\n      } else if (this.autoObj.forceScrollStatus > 0 && this.curScrollData.windowHeight + this.curScrollData.offsetY >= this.curScrollData.totalHeight) {\n        this.autoObj.scrollDy = this.curScrollData.offsetY; //Correcting data system deviations\n        return;\n      }\n      //Barrel effect, the slowest is 1.x1\n      this.curScrollData.hasScroll = false;\n    }\n    this.scrollRef && this.scrollRef.scrollTo({x: 0, y: height, animated});\n  }\n\n  onScrollListener = (event) => {\n    const nativeEvent = event.nativeEvent\n    this.curScrollData = {\n      totalHeight: nativeEvent.contentSize.height,\n      windowHeight: nativeEvent.layoutMeasurement.height,\n      offsetY: nativeEvent.contentOffset.y,\n      hasScroll: true,\n    }\n    if (nativeEvent.contentOffset.y !== 0) this.isHasMeasure = true\n    if (this.props.onScrollListener) this.props.onScrollListener(event);\n  }\n\n  render() {\n    const {selectedItem, selectedPosition, scrollEnabled} = this.state\n    const {dataSource, keyExtractor, renderItem, movedWrapStyle} = this.props\n    return (\n      <View style={styles.box}>\n        {\n          selectedPosition && (\n            <View style={[movedWrapStyle, { left: selectedPosition.left, top: selectedPosition.top, position: 'absolute', zIndex: 999 }]}>\n              {renderItem(selectedItem, null, true)}\n            </View>\n          )\n        }\n        <ScrollView\n          bounces={false}\n          scrollEventThrottle={1}\n          scrollIndicatorInsets={this.props.scrollIndicatorInsets}\n          ref={(scrollRef)=> {\n              if (this.props.onScrollRef) this.props.onScrollRef(scrollRef)\n              this.scrollRef = scrollRef\n              return this.scrollRef\n          }}\n          scrollEnabled = {scrollEnabled}\n          onScroll={this.onScrollListener}\n          style={styles.scroll}>\n          {this.props.renderHeaderView ? this.props.renderHeaderView : null} \n          <View style={styles.container}>\n            {\n              dataSource.map((item, index) => {\n                const key = keyExtractor(item, index)\n                this.keyToIndexMap.set(key, index)\n                return (\n                  <View\n                    key={key}\n                    {...this._panResponder.panHandlers}\n                    onLayout={event => this._setLayoutData(key, event)}\n                  >\n                    {renderItem(item, index, false)}\n                  </View>\n                )\n              })\n            }\n          </View>\n          {this.props.renderBottomView ? this.props.renderBottomView : null}\n        </ScrollView>\n      </View>\n    )\n  }\n  \n}\n\nAnySizeDragSortableView.propTypes = {\n  dataSource: PropTypes.array.isRequired,\n  keyExtractor: PropTypes.func.isRequired,\n  renderItem: PropTypes.func.isRequired,\n  onDataChange: PropTypes.func,\n  headerViewHeight: PropTypes.number,\n  renderBottomView: PropTypes.element,\n  bottomViewHeight: PropTypes.number,\n  renderHeaderView: PropTypes.element,\n  autoThrottle: PropTypes.number,\n  onDragEnd: PropTypes.func,\n  autoThrottleDuration: PropTypes.number,\n  scrollIndicatorInsets: PropTypes.shape({\n    top: PropTypes.number,\n    left: PropTypes.number,\n    bottom: PropTypes.number,\n    right: PropTypes.number,\n  }),\n  onScrollListener: PropTypes.func,\n  onScrollRef: PropTypes.func,\n  areaOverlapRatio: PropTypes.number,\n  movedWrapStyle: PropTypes.object,\n  /** \n   * childMarginxx: Must be greater than > 0\n   * Optimize the calculation of the size of the rectangle where the two components \n   *  intersect to prevent repeated switching caused by triggering the critical point .\n   */\n  childMarginTop: PropTypes.number,\n  childMarginBottom: PropTypes.number,\n  childMarginLeft: PropTypes.number,\n  childMarginRight: PropTypes.number\n}\n\nAnySizeDragSortableView.defaultProps = {\n  areaOverlapRatio: 0.55, // Must be greater than 0.5\n  autoThrottle: 2,\n  autoThrottleDuration: 10,\n  scrollIndicatorInsets: {\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 1,\n  },\n  headerViewHeight: 0,\n  bottomViewHeight: 0,\n  movedWrapStyle: {\n    backgroundColor: 'blue',\n    zIndex: 999,\n  },\n  childMarginTop: 10,\n  childMarginBottom: 10,\n  childMarginLeft: 10,\n  childMarginRight: 10\n}\n\nconst styles = StyleSheet.create({\n  box: {\n    flex: 1,\n    position: 'relative'\n  },\n  scroll: {\n    flex: 1,\n  },\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}