{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Countdown = function Countdown(_ref) {\n  var trashedDate = _ref.trashedDate;\n  var calculateRemainingTime = function calculateRemainingTime(trashedDate) {\n    var trashDate = new Date(trashedDate);\n    var expirationDate = new Date(trashDate.getTime() + 21 * 24 * 60 * 60 * 1000);\n    var currentDate = new Date();\n    var diff = expirationDate - currentDate;\n    var totalSeconds = Math.floor(diff / 1000);\n    var totalMinutes = Math.floor(totalSeconds / 60);\n    var totalHours = Math.floor(totalMinutes / 60);\n    var days = Math.floor(totalHours / 24);\n    var hours = totalHours % 24;\n    var minutes = totalMinutes % 60;\n    var seconds = totalSeconds % 60;\n    if (days > 7) {\n      return {\n        timeString: days > 1 ? `${days} days left` : `${days} day left`,\n        style: styles.normal\n      };\n    } else if (totalHours > 48) {\n      return {\n        timeString: `${totalHours} hours left`,\n        style: styles.warning\n      };\n    } else if (totalHours >= 1) {\n      return {\n        timeString: `${totalHours} hours left`,\n        style: styles.warning\n      };\n    } else if (totalMinutes >= 5) {\n      return {\n        timeString: `${totalMinutes} minutes left`,\n        style: styles.critical\n      };\n    } else if (totalMinutes > 0 || seconds > 0) {\n      return {\n        timeString: `${minutes} minutes ${seconds} seconds left`,\n        style: styles.critical\n      };\n    }\n    return {\n      timeString: 'Expired',\n      style: styles.expired\n    };\n  };\n  var _useState = useState(calculateRemainingTime(trashedDate)),\n    _useState2 = _slicedToArray(_useState, 2),\n    remainingTime = _useState2[0],\n    setRemainingTime = _useState2[1];\n  useEffect(function () {\n    var timer = setInterval(function () {\n      setRemainingTime(calculateRemainingTime(trashedDate));\n    }, 1000);\n    return function () {\n      return clearInterval(timer);\n    };\n  }, [trashedDate]);\n  return _jsx(Text, {\n    style: [styles.countdownText, remainingTime.style],\n    children: remainingTime.timeString\n  });\n};\nexport default Countdown;\nvar styles = StyleSheet.create({\n  countdownText: {\n    fontSize: 13,\n    fontWeight: '400',\n    color: '#585858',\n    alignSelf: 'center',\n    flexDirection: 'row',\n    whiteSpace: 'nowrap',\n    fontStyle: 'italic'\n  },\n  normal: {\n    fontWeight: '400',\n    color: '#585858'\n  },\n  warning: {\n    fontWeight: '400',\n    color: '#b31616'\n  },\n  critical: {\n    fontWeight: '800',\n    color: '#b31616',\n    textDecorationLine: 'underline'\n  },\n  expired: {\n    fontStyle: 'normal',\n    fontSize: 15,\n    fontWeight: '800',\n    color: '#b31616',\n    textDecorationLine: 'underline'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","Text","StyleSheet","jsx","_jsx","Countdown","_ref","trashedDate","calculateRemainingTime","trashDate","Date","expirationDate","getTime","currentDate","diff","totalSeconds","Math","floor","totalMinutes","totalHours","days","hours","minutes","seconds","timeString","style","styles","normal","warning","critical","expired","_useState","_useState2","_slicedToArray","remainingTime","setRemainingTime","timer","setInterval","clearInterval","countdownText","children","create","fontSize","fontWeight","color","alignSelf","flexDirection","whiteSpace","fontStyle","textDecorationLine"],"sources":["/home/cballard@int.integrity.com/public_html/formBuilder/frontendFormBuilder/componentsForPages/Countdown.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Text, StyleSheet } from 'react-native';\n\nconst Countdown = ({ trashedDate }) => {\n    const calculateRemainingTime = (trashedDate) => {\n        const trashDate = new Date(trashedDate);\n        const expirationDate = new Date(trashDate.getTime() + (21 * 24 * 60 * 60 * 1000));\n        const currentDate = new Date();\n        const diff = expirationDate - currentDate;\n    \n        const totalSeconds = Math.floor(diff / 1000);\n        const totalMinutes = Math.floor(totalSeconds / 60);\n        const totalHours = Math.floor(totalMinutes / 60);\n        const days = Math.floor(totalHours / 24);\n    \n        const hours = totalHours % 24;\n        const minutes = totalMinutes % 60;\n        const seconds = totalSeconds % 60;\n    \n        if (days > 7) {\n            return {\n                timeString: days > 1 ? `${days} days left` : `${days} day left`,\n                style: styles.normal\n            };\n        } else if (totalHours > 48) {\n            return {\n                timeString: `${totalHours} hours left`,\n                style: styles.warning\n            };\n        } else if (totalHours >= 1) {\n            return {\n                timeString: `${totalHours} hours left`,\n                style: styles.warning\n            };\n        } else if (totalMinutes >= 5) {\n            return {\n                timeString: `${totalMinutes} minutes left`,\n                style: styles.critical\n            };\n        } else if (totalMinutes > 0 || seconds > 0) {\n            return {\n                timeString: `${minutes} minutes ${seconds} seconds left`,\n                style: styles.critical\n            };\n        }\n        return {\n            timeString: 'Expired',\n            style: styles.expired\n        };\n    };\n\n    const [remainingTime, setRemainingTime] = useState(calculateRemainingTime(trashedDate));\n\n    useEffect(() => {\n        const timer = setInterval(() => {\n            setRemainingTime(calculateRemainingTime(trashedDate));\n        }, 1000);\n\n        return () => clearInterval(timer);\n    }, [trashedDate]);\n\n    return (\n        <Text style={[styles.countdownText, remainingTime.style]}>\n            {remainingTime.timeString}\n        </Text>\n    );\n};\n\nexport default Countdown;\n\nconst styles = StyleSheet.create({\n\n    countdownText: {\n        fontSize: 13,\n        fontWeight: '400',\n        color: '#585858',\n        alignSelf: 'center',\n        flexDirection: 'row',\n        whiteSpace: 'nowrap',\n        fontStyle: 'italic',\n    },\n\n    normal: {\n        fontWeight: '400',\n        color: '#585858',\n    },\n\n    warning: {\n        fontWeight: '400',\n        color: '#b31616',\n    },\n\n    critical: {\n        fontWeight: '800',\n        color: '#b31616',\n        textDecorationLine: 'underline',\n    },\n\n    expired: {\n        fontStyle: 'normal',\n        fontSize: 15,\n        fontWeight: '800',\n        color: '#b31616',\n        textDecorationLine: 'underline',\n    },\n\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}