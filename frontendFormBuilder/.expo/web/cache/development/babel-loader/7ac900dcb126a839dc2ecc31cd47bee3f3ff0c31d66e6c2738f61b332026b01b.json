{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar PropTypes = require('prop-types');\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width;\nvar defaultZIndex = 8;\nvar touchZIndex = 99;\nvar DragSortableView = function (_Component) {\n  _inherits(DragSortableView, _Component);\n  var _super = _createSuper(DragSortableView);\n  function DragSortableView(props) {\n    var _this;\n    _classCallCheck(this, DragSortableView);\n    _this = _super.call(this, props);\n    _this._getKey = function (index) {\n      var item = _this.state.dataSource[index];\n      return _this.props.keyExtractor ? _this.props.keyExtractor(item.data, index) : item.originIndex;\n    };\n    _this._renderItemView = function () {\n      var _this$props = _this.props,\n        maxScale = _this$props.maxScale,\n        minOpacity = _this$props.minOpacity;\n      var inputRange = maxScale >= 1 ? [1, maxScale] : [maxScale, 1];\n      var outputRange = maxScale >= 1 ? [1, minOpacity] : [minOpacity, 1];\n      return _this.state.dataSource.map(function (item, index) {\n        var transformObj = {};\n        transformObj[_this.props.scaleStatus] = item.scaleValue;\n        var key = _this._getKey(index);\n        return _jsx(Animated.View, _objectSpread(_objectSpread({\n          ref: function ref(_ref) {\n            return _this.sortRefs.set(key, _ref);\n          }\n        }, _this._panResponder.panHandlers), {}, {\n          style: [styles.item, {\n            marginTop: _this.props.marginChildrenTop,\n            marginBottom: _this.props.marginChildrenBottom,\n            marginLeft: _this.props.marginChildrenLeft,\n            marginRight: _this.props.marginChildrenRight,\n            left: item.position.x,\n            top: item.position.y,\n            opacity: item.scaleValue.interpolate({\n              inputRange: inputRange,\n              outputRange: outputRange\n            }),\n            transform: [transformObj]\n          }],\n          children: _jsx(TouchableOpacity, {\n            activeOpacity: 1,\n            delayLongPress: _this.props.delayLongPress,\n            onPressOut: function onPressOut() {\n              return _this.onPressOut();\n            },\n            onLongPress: function onLongPress() {\n              return _this.startTouch(index);\n            },\n            onPress: function onPress() {\n              if (_this.props.onClickItem) {\n                _this.props.onClickItem(_this.getOriginalData(), item.data, index);\n              }\n            },\n            children: _this.props.renderItem(item.data, index)\n          })\n        }), key);\n      });\n    };\n    _this.sortRefs = new Map();\n    var itemWidth = props.childrenWidth + props.marginChildrenLeft + props.marginChildrenRight;\n    var itemHeight = props.childrenHeight + props.marginChildrenTop + props.marginChildrenBottom;\n    var rowNum = parseInt(props.parentWidth / itemWidth);\n    var dataSource = props.dataSource.map(function (item, index) {\n      var newData = {};\n      var left = index % rowNum * itemWidth;\n      var top = parseInt(index / rowNum) * itemHeight;\n      newData.data = item;\n      newData.originIndex = index;\n      newData.originLeft = left;\n      newData.originTop = top;\n      newData.position = new Animated.ValueXY({\n        x: parseInt(left + 0.5),\n        y: parseInt(top + 0.5)\n      });\n      newData.scaleValue = new Animated.Value(1);\n      return newData;\n    });\n    _this.state = {\n      dataSource: dataSource,\n      curPropsDataSource: props.dataSource,\n      height: Math.ceil(dataSource.length / rowNum) * itemHeight,\n      itemWidth: itemWidth,\n      itemHeight: itemHeight\n    };\n    _this._panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: function onStartShouldSetPanResponder(evt, gestureState) {\n        return true;\n      },\n      onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture(evt, gestureState) {\n        _this.isMovePanResponder = false;\n        return false;\n      },\n      onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder(evt, gestureState) {\n        return _this.isMovePanResponder;\n      },\n      onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture(evt, gestureState) {\n        return _this.isMovePanResponder;\n      },\n      onPanResponderGrant: function onPanResponderGrant(evt, gestureState) {},\n      onPanResponderMove: function onPanResponderMove(evt, gestureState) {\n        return _this.moveTouch(evt, gestureState);\n      },\n      onPanResponderRelease: function onPanResponderRelease(evt, gestureState) {\n        return _this.endTouch(evt);\n      },\n      onPanResponderTerminationRequest: function onPanResponderTerminationRequest(evt, gestureState) {\n        return false;\n      },\n      onShouldBlockNativeResponder: function onShouldBlockNativeResponder(evt, gestureState) {\n        return false;\n      }\n    });\n    return _this;\n  }\n  _createClass(DragSortableView, [{\n    key: \"startTouch\",\n    value: function startTouch(touchIndex) {\n      var _this2 = this;\n      var fixedItems = this.props.fixedItems;\n      if (fixedItems.length > 0 && fixedItems.includes(touchIndex)) {\n        return;\n      }\n      this.isHasMove = false;\n      if (!this.props.sortable) return;\n      var key = this._getKey(touchIndex);\n      if (this.sortRefs.has(key)) {\n        if (this.props.onDragStart) {\n          this.props.onDragStart(touchIndex);\n        }\n        Animated.timing(this.state.dataSource[touchIndex].scaleValue, {\n          toValue: this.props.maxScale,\n          duration: this.props.scaleDuration,\n          useNativeDriver: false\n        }).start(function () {\n          _this2.touchCurItem = {\n            ref: _this2.sortRefs.get(key),\n            index: touchIndex,\n            originLeft: _this2.state.dataSource[touchIndex].originLeft,\n            originTop: _this2.state.dataSource[touchIndex].originTop,\n            moveToIndex: touchIndex\n          };\n          _this2.isMovePanResponder = true;\n        });\n      }\n    }\n  }, {\n    key: \"moveTouch\",\n    value: function moveTouch(nativeEvent, gestureState) {\n      var _this3 = this;\n      this.isHasMove = true;\n      if (this.touchCurItem) {\n        var dx = gestureState.dx;\n        var dy = gestureState.dy;\n        var itemWidth = this.state.itemWidth;\n        var itemHeight = this.state.itemHeight;\n        var rowNum = parseInt(this.props.parentWidth / itemWidth);\n        var maxWidth = this.props.parentWidth - itemWidth;\n        var maxHeight = itemHeight * Math.ceil(this.state.dataSource.length / rowNum) - itemHeight;\n        if (!this.props.isDragFreely) {\n          if (this.touchCurItem.originLeft + dx < 0) {\n            dx = -this.touchCurItem.originLeft;\n          } else if (this.touchCurItem.originLeft + dx > maxWidth) {\n            dx = maxWidth - this.touchCurItem.originLeft;\n          }\n          if (this.touchCurItem.originTop + dy < 0) {\n            dy = -this.touchCurItem.originTop;\n          } else if (this.touchCurItem.originTop + dy > maxHeight) {\n            dy = maxHeight - this.touchCurItem.originTop;\n          }\n        }\n        var left = this.touchCurItem.originLeft + dx;\n        var top = this.touchCurItem.originTop + dy;\n        this.touchCurItem.ref.setNativeProps({\n          style: {\n            zIndex: touchZIndex\n          }\n        });\n        this.state.dataSource[this.touchCurItem.index].position.setValue({\n          x: left,\n          y: top\n        });\n        var moveToIndex = 0;\n        var moveXNum = dx / itemWidth;\n        var moveYNum = dy / itemHeight;\n        if (moveXNum > 0) {\n          moveXNum = parseInt(moveXNum + 0.5);\n        } else if (moveXNum < 0) {\n          moveXNum = parseInt(moveXNum - 0.5);\n        }\n        if (moveYNum > 0) {\n          moveYNum = parseInt(moveYNum + 0.5);\n        } else if (moveYNum < 0) {\n          moveYNum = parseInt(moveYNum - 0.5);\n        }\n        moveToIndex = this.touchCurItem.index + moveXNum + moveYNum * rowNum;\n        if (moveToIndex > this.state.dataSource.length - 1) {\n          moveToIndex = this.state.dataSource.length - 1;\n        } else if (moveToIndex < 0) {\n          moveToIndex = 0;\n        }\n        if (this.props.onDragging) {\n          this.props.onDragging(gestureState, left, top, moveToIndex);\n        }\n        if (this.touchCurItem.moveToIndex != moveToIndex) {\n          var fixedItems = this.props.fixedItems;\n          if (fixedItems.length > 0 && fixedItems.includes(moveToIndex)) return;\n          this.touchCurItem.moveToIndex = moveToIndex;\n          this.state.dataSource.forEach(function (item, index) {\n            var nextItem = null;\n            if (index > _this3.touchCurItem.index && index <= moveToIndex) {\n              nextItem = _this3.state.dataSource[index - 1];\n            } else if (index >= moveToIndex && index < _this3.touchCurItem.index) {\n              nextItem = _this3.state.dataSource[index + 1];\n            } else if (index != _this3.touchCurItem.index && (item.position.x._value != item.originLeft || item.position.y._value != item.originTop)) {\n              nextItem = _this3.state.dataSource[index];\n            } else if (_this3.touchCurItem.index - moveToIndex > 0 && moveToIndex == index + 1 || _this3.touchCurItem.index - moveToIndex < 0 && moveToIndex == index - 1) {\n              nextItem = _this3.state.dataSource[index];\n            }\n            if (nextItem != null) {\n              Animated.timing(item.position, {\n                toValue: {\n                  x: parseInt(nextItem.originLeft + 0.5),\n                  y: parseInt(nextItem.originTop + 0.5)\n                },\n                duration: _this3.props.slideDuration,\n                easing: Easing.out(Easing.quad),\n                useNativeDriver: false\n              }).start();\n            }\n          });\n        }\n      }\n    }\n  }, {\n    key: \"endTouch\",\n    value: function endTouch(nativeEvent) {\n      var _this4 = this;\n      if (this.touchCurItem) {\n        if (this.props.onDragEnd) {\n          this.props.onDragEnd(this.touchCurItem.index, this.touchCurItem.moveToIndex);\n        }\n        Animated.timing(this.state.dataSource[this.touchCurItem.index].scaleValue, {\n          toValue: 1,\n          duration: this.props.scaleDuration,\n          useNativeDriver: false\n        }).start(function () {\n          _this4.touchCurItem.ref.setNativeProps({\n            style: {\n              zIndex: defaultZIndex\n            }\n          });\n          _this4.changePosition(_this4.touchCurItem.index, _this4.touchCurItem.moveToIndex);\n          _this4.touchCurItem = null;\n        });\n      }\n    }\n  }, {\n    key: \"onPressOut\",\n    value: function onPressOut() {\n      var _this5 = this;\n      this.isScaleRecovery = setTimeout(function () {\n        if (_this5.isMovePanResponder && !_this5.isHasMove) {\n          _this5.endTouch();\n        }\n      }, 220);\n    }\n  }, {\n    key: \"changePosition\",\n    value: function changePosition(startIndex, endIndex) {\n      var _this6 = this;\n      if (startIndex == endIndex) {\n        var curItem = this.state.dataSource[startIndex];\n        if (curItem != null) {\n          curItem.position.setValue({\n            x: parseInt(curItem.originLeft + 0.5),\n            y: parseInt(curItem.originTop + 0.5)\n          });\n        }\n        return;\n      }\n      var isCommon = true;\n      if (startIndex > endIndex) {\n        isCommon = false;\n        var tempIndex = startIndex;\n        startIndex = endIndex;\n        endIndex = tempIndex;\n      }\n      var newDataSource = _toConsumableArray(this.state.dataSource).map(function (item, index) {\n        var newIndex = null;\n        if (isCommon) {\n          if (endIndex > index && index >= startIndex) {\n            newIndex = index + 1;\n          } else if (endIndex == index) {\n            newIndex = startIndex;\n          }\n        } else {\n          if (endIndex >= index && index > startIndex) {\n            newIndex = index - 1;\n          } else if (startIndex == index) {\n            newIndex = endIndex;\n          }\n        }\n        if (newIndex != null) {\n          var newItem = _objectSpread({}, _this6.state.dataSource[newIndex]);\n          newItem.originLeft = item.originLeft;\n          newItem.originTop = item.originTop;\n          newItem.position = new Animated.ValueXY({\n            x: parseInt(item.originLeft + 0.5),\n            y: parseInt(item.originTop + 0.5)\n          });\n          item = newItem;\n        }\n        return item;\n      });\n      this.setState({\n        dataSource: newDataSource\n      }, function () {\n        if (_this6.props.onDataChange) {\n          _this6.props.onDataChange(_this6.getOriginalData());\n        }\n        var startItem = _this6.state.dataSource[startIndex];\n        _this6.state.dataSource[startIndex].position.setValue({\n          x: parseInt(startItem.originLeft + 0.5),\n          y: parseInt(startItem.originTop + 0.5)\n        });\n        var endItem = _this6.state.dataSource[endIndex];\n        _this6.state.dataSource[endIndex].position.setValue({\n          x: parseInt(endItem.originLeft + 0.5),\n          y: parseInt(endItem.originTop + 0.5)\n        });\n      });\n    }\n  }, {\n    key: \"reComplexDataSource\",\n    value: function reComplexDataSource(isInit, props) {\n      var itemWidth = this.state.itemWidth;\n      var itemHeight = this.state.itemHeight;\n      var rowNum = parseInt(props.parentWidth / itemWidth);\n      var dataSource = props.dataSource.map(function (item, index) {\n        var newData = {};\n        var left = index % rowNum * itemWidth;\n        var top = parseInt(index / rowNum) * itemHeight;\n        newData.data = item;\n        newData.originIndex = index;\n        newData.originLeft = left;\n        newData.originTop = top;\n        newData.position = new Animated.ValueXY({\n          x: parseInt(left + 0.5),\n          y: parseInt(top + 0.5)\n        });\n        newData.scaleValue = new Animated.Value(1);\n        return newData;\n      });\n      if (isInit) {\n        this.state = {\n          dataSource: dataSource,\n          height: Math.ceil(dataSource.length / rowNum) * itemHeight\n        };\n      } else {\n        this.setState({\n          dataSource: dataSource,\n          height: Math.ceil(dataSource.length / rowNum) * itemHeight\n        });\n      }\n    }\n  }, {\n    key: \"getOriginalData\",\n    value: function getOriginalData() {\n      return this.state.dataSource.map(function (item, index) {\n        return item.data;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsx(View, {\n        style: [styles.container, {\n          width: this.props.parentWidth,\n          height: this.state.height\n        }],\n        children: this._renderItemView()\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.isScaleRecovery) clearTimeout(this.isScaleRecovery);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextprops, prevState) {\n      var itemWidth = nextprops.childrenWidth + nextprops.marginChildrenLeft + nextprops.marginChildrenRight;\n      var itemHeight = nextprops.childrenHeight + nextprops.marginChildrenTop + nextprops.marginChildrenBottom;\n      if (nextprops.dataSource != prevState.curPropsDataSource || itemWidth !== prevState.itemWidth || itemHeight !== prevState.itemHeight) {\n        var rowNum = parseInt(nextprops.parentWidth / itemWidth);\n        var dataSource = nextprops.dataSource.map(function (item, index) {\n          var newData = {};\n          var left = index % rowNum * itemWidth;\n          var top = parseInt(index / rowNum) * itemHeight;\n          newData.data = item;\n          newData.originIndex = index;\n          newData.originLeft = left;\n          newData.originTop = top;\n          newData.position = new Animated.ValueXY({\n            x: parseInt(left + 0.5),\n            y: parseInt(top + 0.5)\n          });\n          newData.scaleValue = new Animated.Value(1);\n          return newData;\n        });\n        return {\n          dataSource: dataSource,\n          curPropsDataSource: nextprops.dataSource,\n          height: Math.ceil(dataSource.length / rowNum) * itemHeight,\n          itemWidth: itemWidth,\n          itemHeight: itemHeight\n        };\n      }\n      return null;\n    }\n  }]);\n  return DragSortableView;\n}(Component);\nexport { DragSortableView as default };\nDragSortableView.propTypes = {\n  dataSource: PropTypes.array.isRequired,\n  parentWidth: PropTypes.number,\n  childrenHeight: PropTypes.number.isRequired,\n  childrenWidth: PropTypes.number.isRequired,\n  marginChildrenTop: PropTypes.number,\n  marginChildrenBottom: PropTypes.number,\n  marginChildrenLeft: PropTypes.number,\n  marginChildrenRight: PropTypes.number,\n  sortable: PropTypes.bool,\n  onClickItem: PropTypes.func,\n  onDragStart: PropTypes.func,\n  onDragEnd: PropTypes.func,\n  onDataChange: PropTypes.func,\n  renderItem: PropTypes.func.isRequired,\n  scaleStatus: PropTypes.oneOf(['scale', 'scaleX', 'scaleY']),\n  fixedItems: PropTypes.array,\n  keyExtractor: PropTypes.func,\n  delayLongPress: PropTypes.number,\n  isDragFreely: PropTypes.bool,\n  onDragging: PropTypes.func,\n  maxScale: PropTypes.number,\n  minOpacity: PropTypes.number,\n  scaleDuration: PropTypes.number,\n  slideDuration: PropTypes.number\n};\nDragSortableView.defaultProps = {\n  marginChildrenTop: 0,\n  marginChildrenBottom: 0,\n  marginChildrenLeft: 0,\n  marginChildrenRight: 0,\n  parentWidth: width,\n  sortable: true,\n  scaleStatus: 'scale',\n  fixedItems: [],\n  isDragFreely: false,\n  maxScale: 1.1,\n  minOpacity: 0.8,\n  scaleDuration: 100,\n  slideDuration: 300\n};\nvar styles = StyleSheet.create({\n  container: {\n    flexWrap: 'wrap',\n    flexDirection: 'row'\n  },\n  item: {\n    position: 'absolute',\n    zIndex: defaultZIndex\n  }\n});","map":{"version":3,"names":["React","Component","Animated","Dimensions","Easing","PanResponder","StyleSheet","TouchableOpacity","View","jsx","_jsx","PropTypes","require","_Dimensions$get","get","width","defaultZIndex","touchZIndex","DragSortableView","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","_getKey","index","item","state","dataSource","keyExtractor","data","originIndex","_renderItemView","_this$props","maxScale","minOpacity","inputRange","outputRange","map","transformObj","scaleStatus","scaleValue","key","_objectSpread","ref","sortRefs","set","_panResponder","panHandlers","style","styles","marginTop","marginChildrenTop","marginBottom","marginChildrenBottom","marginLeft","marginChildrenLeft","marginRight","marginChildrenRight","left","position","x","top","y","opacity","interpolate","transform","children","activeOpacity","delayLongPress","onPressOut","onLongPress","startTouch","onPress","onClickItem","getOriginalData","renderItem","Map","itemWidth","childrenWidth","itemHeight","childrenHeight","rowNum","parseInt","parentWidth","newData","originLeft","originTop","ValueXY","Value","curPropsDataSource","height","Math","ceil","length","create","onStartShouldSetPanResponder","evt","gestureState","onStartShouldSetPanResponderCapture","isMovePanResponder","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderGrant","onPanResponderMove","moveTouch","onPanResponderRelease","endTouch","onPanResponderTerminationRequest","onShouldBlockNativeResponder","_createClass","value","touchIndex","_this2","fixedItems","includes","isHasMove","sortable","has","onDragStart","timing","toValue","duration","scaleDuration","useNativeDriver","start","touchCurItem","moveToIndex","nativeEvent","_this3","dx","dy","maxWidth","maxHeight","isDragFreely","setNativeProps","zIndex","setValue","moveXNum","moveYNum","onDragging","forEach","nextItem","_value","slideDuration","easing","out","quad","_this4","onDragEnd","changePosition","_this5","isScaleRecovery","setTimeout","startIndex","endIndex","_this6","curItem","isCommon","tempIndex","newDataSource","_toConsumableArray","newIndex","newItem","setState","onDataChange","startItem","endItem","reComplexDataSource","isInit","render","container","componentWillUnmount","clearTimeout","getDerivedStateFromProps","nextprops","prevState","default","propTypes","array","isRequired","number","bool","func","oneOf","defaultProps","flexWrap","flexDirection"],"sources":["/home/cballard@int.integrity.com/public_html/formBuilder/frontendFormBuilder/node_modules/react-native-drag-sort/DragSortableView.js"],"sourcesContent":["import React, {Component} from 'react'\nimport {Animated, Dimensions, Easing, PanResponder, StyleSheet, TouchableOpacity, View} from 'react-native'\n\nconst PropTypes = require('prop-types')\nconst {width} = Dimensions.get('window')\n\nconst defaultZIndex = 8\nconst touchZIndex = 99\n\nexport default class DragSortableView extends Component{\n\n    constructor(props) {\n        super(props)\n\n        this.sortRefs = new Map()\n\n        const itemWidth = props.childrenWidth+props.marginChildrenLeft+props.marginChildrenRight\n        const itemHeight = props.childrenHeight+props.marginChildrenTop+props.marginChildrenBottom\n\n        // this.reComplexDataSource(true,props) // react < 16.3\n        // react > 16.3 Fiber\n        const rowNum = parseInt(props.parentWidth/itemWidth);\n        const dataSource = props.dataSource.map((item,index)=>{\n            const newData = {}\n            const left = (index%rowNum)*itemWidth\n            const top = parseInt((index/rowNum))*itemHeight\n\n            newData.data = item\n            newData.originIndex = index\n            newData.originLeft = left\n            newData.originTop = top\n            newData.position = new Animated.ValueXY({\n                x: parseInt(left+0.5),\n                y: parseInt(top+0.5),\n            })\n            newData.scaleValue = new Animated.Value(1)\n            return newData\n        });\n        this.state = {\n            dataSource: dataSource,\n            curPropsDataSource: props.dataSource,\n            height: Math.ceil(dataSource.length / rowNum) * itemHeight,\n            itemWidth,\n            itemHeight,\n        };\n\n        this._panResponder = PanResponder.create({\n            onStartShouldSetPanResponder: (evt, gestureState) => true,\n            onStartShouldSetPanResponderCapture: (evt, gestureState) => {\n                this.isMovePanResponder = false\n                return false\n            },\n            onMoveShouldSetPanResponder: (evt, gestureState) => this.isMovePanResponder,\n            onMoveShouldSetPanResponderCapture: (evt, gestureState) => this.isMovePanResponder,\n\n            onPanResponderGrant: (evt, gestureState) => {},\n            onPanResponderMove: (evt, gestureState) => this.moveTouch(evt,gestureState),\n            onPanResponderRelease: (evt, gestureState) => this.endTouch(evt),\n\n            onPanResponderTerminationRequest: (evt, gestureState) => false,\n            onShouldBlockNativeResponder: (evt, gestureState) => false,\n        })\n    }\n\n    // react < 16.3\n    // componentWillReceiveProps(nextProps) {\n    //     if (this.props.dataSource != nextProps.dataSource) {\n    //         this.reComplexDataSource(false,nextProps)\n    //     }\n    // }\n\n    // react > 16.3 Fiber\n    static getDerivedStateFromProps(nextprops, prevState) {\n        const itemWidth = nextprops.childrenWidth + nextprops.marginChildrenLeft + nextprops.marginChildrenRight\n        const itemHeight = nextprops.childrenHeight + nextprops.marginChildrenTop + nextprops.marginChildrenBottom\n        if (nextprops.dataSource != prevState.curPropsDataSource || itemWidth !== prevState.itemWidth || itemHeight !== prevState.itemHeight) {\n            \n            const rowNum = parseInt(nextprops.parentWidth / itemWidth);\n            const dataSource = nextprops.dataSource.map((item, index) => {\n                const newData = {};\n                const left = index % rowNum * itemWidth;\n                const top = parseInt(index / rowNum) * itemHeight;\n\n                newData.data = item;\n                newData.originIndex = index;\n                newData.originLeft = left;\n                newData.originTop = top;\n                newData.position = new Animated.ValueXY({\n                    x: parseInt(left + 0.5),\n                    y: parseInt(top + 0.5),\n                });\n                newData.scaleValue = new Animated.Value(1);\n                return newData;\n            });\n            return {\n                dataSource: dataSource,\n                curPropsDataSource: nextprops.dataSource,\n                height: Math.ceil(dataSource.length / rowNum) * itemHeight,\n                itemWidth,\n                itemHeight,\n            }\n        }\n        return null;\n    }\n\n    startTouch(touchIndex) {\n\n        //防止拖动\n        const fixedItems = this.props.fixedItems;\n        if (fixedItems.length > 0 && fixedItems.includes(touchIndex)){\n            return;\n        }\n\n        this.isHasMove = false\n\n        if (!this.props.sortable) return\n\n        const key = this._getKey(touchIndex);\n        if (this.sortRefs.has(key)) {\n            if (this.props.onDragStart) {\n                this.props.onDragStart(touchIndex)\n            }\n            Animated.timing(\n                this.state.dataSource[touchIndex].scaleValue,\n                {\n                    toValue: this.props.maxScale,\n                    duration: this.props.scaleDuration,\n                    useNativeDriver: false,\n                }\n            ).start(()=>{\n                this.touchCurItem = {\n                    ref: this.sortRefs.get(key),\n                    index: touchIndex,\n                    originLeft: this.state.dataSource[touchIndex].originLeft,\n                    originTop: this.state.dataSource[touchIndex].originTop,\n                    moveToIndex: touchIndex,\n                }\n                this.isMovePanResponder = true\n            })\n        }\n    }\n\n\n\n    moveTouch (nativeEvent,gestureState) {\n\n        this.isHasMove = true\n\n        //if (this.isScaleRecovery) clearTimeout(this.isScaleRecovery)\n\n        if (this.touchCurItem) {\n\n            let dx = gestureState.dx\n            let dy = gestureState.dy\n            const itemWidth = this.state.itemWidth;\n            const itemHeight = this.state.itemHeight;\n\n            const rowNum = parseInt(this.props.parentWidth/itemWidth);\n            const maxWidth = this.props.parentWidth-itemWidth\n            const maxHeight = itemHeight*Math.ceil(this.state.dataSource.length/rowNum) - itemHeight\n\n            // Is it free to drag\n            if (!this.props.isDragFreely) {\n                // Maximum or minimum after out of bounds\n                if (this.touchCurItem.originLeft + dx < 0) {\n                    dx = -this.touchCurItem.originLeft\n                } else if (this.touchCurItem.originLeft + dx > maxWidth) {\n                    dx = maxWidth - this.touchCurItem.originLeft\n                }\n                if (this.touchCurItem.originTop + dy < 0) {\n                    dy = -this.touchCurItem.originTop\n                } else if (this.touchCurItem.originTop + dy > maxHeight) {\n                    dy = maxHeight - this.touchCurItem.originTop\n                }\n            }\n\n            let left = this.touchCurItem.originLeft + dx\n            let top = this.touchCurItem.originTop + dy\n\n            this.touchCurItem.ref.setNativeProps({\n                style: {\n                    zIndex: touchZIndex,\n                }\n            })\n\n            this.state.dataSource[this.touchCurItem.index].position.setValue({\n                x: left,\n                y: top,\n            })\n\n            let moveToIndex = 0\n            let moveXNum = dx/itemWidth\n            let moveYNum = dy/itemHeight\n            if (moveXNum > 0) {\n                moveXNum = parseInt(moveXNum+0.5)\n            } else if (moveXNum < 0) {\n                moveXNum = parseInt(moveXNum-0.5)\n            }\n            if (moveYNum > 0) {\n                moveYNum = parseInt(moveYNum+0.5)\n            } else if (moveYNum < 0) {\n                moveYNum = parseInt(moveYNum-0.5)\n            }\n\n            moveToIndex = this.touchCurItem.index+moveXNum+moveYNum*rowNum\n\n            if (moveToIndex > this.state.dataSource.length-1) {\n                moveToIndex = this.state.dataSource.length-1\n            } else if (moveToIndex < 0) {\n                moveToIndex = 0;\n            }\n\n            if (this.props.onDragging) {\n                this.props.onDragging(gestureState, left, top, moveToIndex)\n            }\n\n            if (this.touchCurItem.moveToIndex != moveToIndex ) {\n                const fixedItems = this.props.fixedItems;\n                if (fixedItems.length > 0 && fixedItems.includes(moveToIndex)) return;\n                this.touchCurItem.moveToIndex = moveToIndex\n                this.state.dataSource.forEach((item,index)=>{\n\n                    let nextItem = null\n                    if (index > this.touchCurItem.index && index <= moveToIndex) {\n                        nextItem = this.state.dataSource[index-1]\n\n                    } else if (index >= moveToIndex && index < this.touchCurItem.index) {\n                        nextItem = this.state.dataSource[index+1]\n\n                    } else if (index != this.touchCurItem.index &&\n                        (item.position.x._value != item.originLeft ||\n                            item.position.y._value != item.originTop)) {\n                        nextItem = this.state.dataSource[index]\n\n                    } else if ((this.touchCurItem.index-moveToIndex > 0 && moveToIndex == index+1) ||\n                        (this.touchCurItem.index-moveToIndex < 0 && moveToIndex == index-1)) {\n                        nextItem = this.state.dataSource[index]\n                    }\n\n                    if (nextItem != null) {\n                        Animated.timing(\n                            item.position,\n                            {\n                                toValue: {x: parseInt(nextItem.originLeft+0.5),y: parseInt(nextItem.originTop+0.5)},\n                                duration: this.props.slideDuration,\n                                easing: Easing.out(Easing.quad),\n                                useNativeDriver: false,\n                            }\n                        ).start()\n                    }\n\n                })\n            }\n\n        }\n    }\n\n    endTouch (nativeEvent) {\n\n        //clear\n        if (this.touchCurItem) {\n            if (this.props.onDragEnd) {\n                this.props.onDragEnd(this.touchCurItem.index,this.touchCurItem.moveToIndex)\n            }\n            //this.state.dataSource[this.touchCurItem.index].scaleValue.setValue(1)\n            Animated.timing(\n                this.state.dataSource[this.touchCurItem.index].scaleValue,\n                {\n                    toValue: 1,\n                    duration: this.props.scaleDuration,\n                    useNativeDriver: false,\n                }\n            ).start(()=>{\n                this.touchCurItem.ref.setNativeProps({\n                    style: {\n                        zIndex: defaultZIndex,\n                    }\n                })\n                this.changePosition(this.touchCurItem.index,this.touchCurItem.moveToIndex)\n                this.touchCurItem = null\n            })\n            \n        }\n    }\n\n    onPressOut () {\n        this.isScaleRecovery = setTimeout(()=> {\n            if (this.isMovePanResponder && !this.isHasMove) {\n                this.endTouch()\n            }\n        },220)\n    }\n\n    changePosition(startIndex,endIndex) {\n\n        if (startIndex == endIndex) {\n            const curItem = this.state.dataSource[startIndex]\n            if (curItem != null) {\n                curItem.position.setValue({\n                    x: parseInt(curItem.originLeft + 0.5),\n                    y: parseInt(curItem.originTop + 0.5),\n                })\n            }\n            return;\n        }\n\n        let isCommon = true\n        if (startIndex > endIndex) {\n            isCommon = false\n            let tempIndex = startIndex\n            startIndex = endIndex\n            endIndex = tempIndex\n        }\n\n        const newDataSource = [...this.state.dataSource].map((item,index)=>{\n            let newIndex = null\n            if (isCommon) {\n                if (endIndex > index && index >= startIndex) {\n                    newIndex = index+1\n                } else if (endIndex == index) {\n                    newIndex = startIndex\n                }\n            } else {\n                if (endIndex >= index && index > startIndex) {\n                    newIndex = index-1\n                } else if (startIndex == index) {\n                    newIndex = endIndex\n                }\n            }\n\n            if (newIndex != null) {\n                const newItem = {...this.state.dataSource[newIndex]}\n                newItem.originLeft = item.originLeft\n                newItem.originTop = item.originTop\n                newItem.position = new Animated.ValueXY({\n                    x: parseInt(item.originLeft+0.5),\n                    y: parseInt(item.originTop+0.5),\n                })\n                item = newItem\n            }\n\n            return item\n        })\n\n        this.setState({\n            dataSource: newDataSource\n        },()=>{\n            if (this.props.onDataChange) {\n                this.props.onDataChange(this.getOriginalData())\n            }\n            // Prevent RN from drawing the beginning and end\n            const startItem = this.state.dataSource[startIndex]\n            this.state.dataSource[startIndex].position.setValue({\n                x: parseInt(startItem.originLeft+0.5),\n                y: parseInt(startItem.originTop+0.5),\n            })\n            const endItem = this.state.dataSource[endIndex]\n            this.state.dataSource[endIndex].position.setValue({\n                x: parseInt(endItem.originLeft+0.5),\n                y: parseInt(endItem.originTop+0.5),\n            })\n        })\n\n    }\n\n    reComplexDataSource(isInit,props) {\n        const itemWidth = this.state.itemWidth;\n        const itemHeight = this.state.itemHeight;\n        const rowNum = parseInt(props.parentWidth/itemWidth);\n        const dataSource = props.dataSource.map((item,index)=>{\n            const newData = {}\n            const left = (index%rowNum)*itemWidth\n            const top = parseInt((index/rowNum))*itemHeight\n\n            newData.data = item\n            newData.originIndex = index\n            newData.originLeft = left\n            newData.originTop = top\n            newData.position = new Animated.ValueXY({\n                x: parseInt(left+0.5),\n                y: parseInt(top+0.5),\n            })\n            newData.scaleValue = new Animated.Value(1)\n            return newData\n        })\n\n        if (isInit) {\n            this.state = {\n                dataSource: dataSource,\n                height: Math.ceil(dataSource.length/rowNum)*itemHeight\n            }\n        } else {\n            this.setState({\n                dataSource: dataSource,\n                height: Math.ceil(dataSource.length/rowNum)*itemHeight\n            })\n        }\n\n    }\n\n    getOriginalData () {\n        return this.state.dataSource.map((item,index)=> item.data)\n    }\n\n    render() {\n        return (\n            <View\n                //ref={(ref)=>this.sortParentRef=ref}\n                style={[styles.container,{\n                    width: this.props.parentWidth,\n                    height: this.state.height,\n                }]}\n                //onLayout={()=> {}}\n                >\n                {this._renderItemView()}\n            </View>\n        )\n    }\n\n    _getKey = (index) => {\n        const item = this.state.dataSource[index];\n        return this.props.keyExtractor ? this.props.keyExtractor(item.data, index) : item.originIndex;\n    }\n\n    _renderItemView = () => {\n        const {maxScale, minOpacity} = this.props\n        const inputRange = maxScale >= 1 ? [1, maxScale] : [maxScale, 1]\n        const outputRange = maxScale >= 1 ? [1, minOpacity] : [minOpacity, 1]\n        return this.state.dataSource.map((item,index)=>{\n            const transformObj = {}\n            transformObj[this.props.scaleStatus] = item.scaleValue\n            const key = this._getKey(index);\n            return (\n                <Animated.View\n                    key={key}\n                    ref={(ref) => this.sortRefs.set(key,ref)}\n                    {...this._panResponder.panHandlers}\n                    style={[styles.item,{\n                        marginTop: this.props.marginChildrenTop,\n                        marginBottom: this.props.marginChildrenBottom,\n                        marginLeft: this.props.marginChildrenLeft,\n                        marginRight: this.props.marginChildrenRight,\n                        left: item.position.x,\n                        top: item.position.y,\n                        opacity: item.scaleValue.interpolate({inputRange,outputRange}),\n                        transform: [transformObj]\n                    }]}>\n                    <TouchableOpacity\n                        activeOpacity = {1}\n                        delayLongPress={this.props.delayLongPress}\n                        onPressOut={()=> this.onPressOut()}\n                        onLongPress={()=>this.startTouch(index)}\n                        onPress={()=>{\n                            if (this.props.onClickItem) {\n                                this.props.onClickItem(this.getOriginalData(),item.data,index)\n                            }\n                        }}>\n                        {this.props.renderItem(item.data,index)}\n                    </TouchableOpacity>\n                </Animated.View>\n            )\n        })\n    }\n\n    componentWillUnmount() {\n        if (this.isScaleRecovery) clearTimeout(this.isScaleRecovery)\n    }\n\n}\n\nDragSortableView.propTypes = {\n    dataSource: PropTypes.array.isRequired,\n    parentWidth: PropTypes.number,\n    childrenHeight: PropTypes.number.isRequired,\n    childrenWidth: PropTypes.number.isRequired,\n\n    marginChildrenTop: PropTypes.number,\n    marginChildrenBottom: PropTypes.number,\n    marginChildrenLeft: PropTypes.number,\n    marginChildrenRight: PropTypes.number,\n\n    sortable: PropTypes.bool,\n\n    onClickItem: PropTypes.func,\n    onDragStart: PropTypes.func,\n    onDragEnd: PropTypes.func,\n    onDataChange: PropTypes.func,\n    renderItem: PropTypes.func.isRequired,\n    scaleStatus: PropTypes.oneOf(['scale','scaleX','scaleY']),\n    fixedItems: PropTypes.array,\n    keyExtractor: PropTypes.func,\n    delayLongPress: PropTypes.number,\n    isDragFreely: PropTypes.bool,\n    onDragging: PropTypes.func,\n    maxScale: PropTypes.number,\n    minOpacity: PropTypes.number,\n    scaleDuration: PropTypes.number,\n    slideDuration: PropTypes.number\n}\n\nDragSortableView.defaultProps = {\n    marginChildrenTop: 0,\n    marginChildrenBottom: 0,\n    marginChildrenLeft: 0,\n    marginChildrenRight: 0,\n    parentWidth: width,\n    sortable: true,\n    scaleStatus: 'scale',\n    fixedItems: [],\n    isDragFreely: false,\n    maxScale: 1.1,\n    minOpacity: 0.8,\n    scaleDuration: 100,\n    slideDuration: 300,\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flexWrap: 'wrap',\n        flexDirection: 'row',\n    },\n    item: {\n        position: 'absolute',\n        zIndex: defaultZIndex,\n    },\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}