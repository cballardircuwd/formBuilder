{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PropTypes = require('prop-types');\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nvar defaultZIndex = 8;\nvar touchZIndex = 99;\nvar AutoDragSortableView = function (_Component) {\n  _inherits(AutoDragSortableView, _Component);\n  var _super = _createSuper(AutoDragSortableView);\n  function AutoDragSortableView(props) {\n    var _this;\n    _classCallCheck(this, AutoDragSortableView);\n    _this = _super.call(this, props);\n    _this.autoMeasureHeight = function () {\n      if (!_this.isHasMeasure) {\n        setTimeout(function () {\n          _this.scrollTo(1, false);\n          _this.scrollTo(0, false);\n        }, 30);\n      }\n    };\n    _this.initTag = function () {\n      _this.clearAutoInterval();\n      _this.autoObj = {\n        curDy: 0,\n        scrollDx: 0,\n        scrollDy: 0,\n        hasScrollDy: null,\n        forceScrollStatus: 0\n      };\n    };\n    _this.dealtScrollStatus = function () {\n      var scrollData = _this.curScrollData;\n      if (scrollData == null || scrollData.offsetY == null) return;\n      var totalHeight = scrollData.totalHeight,\n        windowHeight = scrollData.windowHeight,\n        offsetY = scrollData.offsetY;\n      if (totalHeight <= windowHeight + offsetY) {\n        _this.autoObj.forceScrollStatus = -2;\n      } else if (offsetY <= 0) {\n        _this.autoObj.forceScrollStatus = 2;\n      }\n    };\n    _this.clearAutoInterval = function () {\n      if (_this.autoInterval) {\n        clearInterval(_this.autoInterval);\n        _this.autoInterval = null;\n      }\n    };\n    _this.startAutoScroll = function () {\n      if (_this.autoInterval != null) {\n        return;\n      }\n      _this.autoInterval = setInterval(function () {\n        if (_this.autoObj.forceScrollStatus === 0 || _this.autoObj.forceScrollStatus === 2 || _this.autoObj.forceScrollStatus === -2) {\n          _this.clearAutoInterval();\n          return;\n        }\n        if (!_this.curScrollData.hasScroll) {\n          return;\n        }\n        if (_this.autoObj.forceScrollStatus === 1) {\n          _this.autoObj.scrollDy = _this.autoObj.scrollDy + _this.props.autoThrottle;\n        } else if (_this.autoObj.forceScrollStatus === -1) {\n          _this.autoObj.scrollDy = _this.autoObj.scrollDy - _this.props.autoThrottle;\n        }\n        _this.scrollTo(_this.autoObj.scrollDy, false);\n        _this.dealtScrollStatus();\n        if (Platform.OS === 'android') {\n          setTimeout(function () {\n            if (_this.isHasMove) _this.moveTouch(null, {\n              dx: _this.autoObj.scrollDx,\n              dy: _this.autoObj.curDy + _this.autoObj.scrollDy\n            });\n          }, 1);\n        } else {\n          _this.moveTouch(null, {\n            dx: _this.autoObj.scrollDx,\n            dy: _this.autoObj.curDy + _this.autoObj.scrollDy\n          });\n        }\n      }, _this.props.autoThrottleDuration);\n    };\n    _this.isStartupAuto = function () {\n      if (_this.curScrollData == null) {\n        return false;\n      }\n      return true;\n    };\n    _this.scrollTo = function (height) {\n      var animated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      if (_this.curScrollData) {\n        if (_this.autoObj.forceScrollStatus < 0 && _this.curScrollData.offsetY <= 0) {\n          _this.autoObj.scrollDy = 0;\n          return;\n        } else if (_this.autoObj.forceScrollStatus > 0 && _this.curScrollData.windowHeight + _this.curScrollData.offsetY >= _this.curScrollData.totalHeight) {\n          _this.autoObj.scrollDy = _this.curScrollData.offsetY;\n          return;\n        }\n        _this.curScrollData.hasScroll = false;\n      }\n      _this.scrollRef && _this.scrollRef.scrollTo({\n        x: 0,\n        y: height,\n        animated: animated\n      });\n    };\n    _this.onScrollListener = function (event) {\n      var nativeEvent = event.nativeEvent;\n      _this.curScrollData = {\n        totalHeight: nativeEvent.contentSize.height,\n        windowHeight: nativeEvent.layoutMeasurement.height,\n        offsetY: nativeEvent.contentOffset.y,\n        hasScroll: true\n      };\n      if (nativeEvent.contentOffset.y !== 0) _this.isHasMeasure = true;\n      if (_this.props.onScrollListener) _this.props.onScrollListener(event);\n    };\n    _this._getKey = function (index) {\n      var item = _this.state.dataSource[index];\n      return _this.props.keyExtractor ? _this.props.keyExtractor(item.data, index) : item.originIndex;\n    };\n    _this._renderItemView = function () {\n      var _this$props = _this.props,\n        maxScale = _this$props.maxScale,\n        minOpacity = _this$props.minOpacity;\n      var inputRange = maxScale >= 1 ? [1, maxScale] : [maxScale, 1];\n      var outputRange = maxScale >= 1 ? [1, minOpacity] : [minOpacity, 1];\n      return _this.state.dataSource.map(function (item, index) {\n        var transformObj = {};\n        transformObj[_this.props.scaleStatus] = item.scaleValue;\n        var key = _this.props.keyExtractor ? _this.props.keyExtractor(item.data, index) : item.originIndex;\n        return _jsx(Animated.View, _objectSpread(_objectSpread({\n          ref: function ref(_ref) {\n            return _this.sortRefs.set(key, _ref);\n          }\n        }, _this._panResponder.panHandlers), {}, {\n          style: [styles.item, {\n            marginTop: _this.props.marginChildrenTop,\n            marginBottom: _this.props.marginChildrenBottom,\n            marginLeft: _this.props.marginChildrenLeft,\n            marginRight: _this.props.marginChildrenRight,\n            left: item.position.x,\n            top: item.position.y,\n            opacity: item.scaleValue.interpolate({\n              inputRange: inputRange,\n              outputRange: outputRange\n            }),\n            transform: [transformObj]\n          }],\n          children: _jsx(TouchableOpacity, {\n            activeOpacity: 1,\n            delayLongPress: _this.props.delayLongPress,\n            onPressOut: function onPressOut() {\n              return _this.onPressOut();\n            },\n            onLongPress: function onLongPress() {\n              return _this.startTouch(index);\n            },\n            onPress: function onPress() {\n              if (_this.props.onClickItem) {\n                _this.isHasMeasure = true;\n                _this.props.onClickItem(_this.getOriginalData(), item.data, index);\n              }\n            },\n            children: _this.props.renderItem(item.data, index)\n          })\n        }), key);\n      });\n    };\n    _this.sortRefs = new Map();\n    var itemWidth = props.childrenWidth + props.marginChildrenLeft + props.marginChildrenRight;\n    var itemHeight = props.childrenHeight + props.marginChildrenTop + props.marginChildrenBottom;\n    var rowNum = parseInt(props.parentWidth / itemWidth);\n    var dataSource = props.dataSource.map(function (item, index) {\n      var newData = {};\n      var left = index % rowNum * itemWidth;\n      var top = parseInt(index / rowNum) * itemHeight;\n      newData.data = item;\n      newData.originIndex = index;\n      newData.originLeft = left;\n      newData.originTop = top;\n      newData.position = new Animated.ValueXY({\n        x: parseInt(left + 0.5),\n        y: parseInt(top + 0.5)\n      });\n      newData.scaleValue = new Animated.Value(1);\n      return newData;\n    });\n    _this.state = {\n      dataSource: dataSource,\n      curPropsDataSource: props.dataSource,\n      height: Math.ceil(dataSource.length / rowNum) * itemHeight,\n      itemWidth: itemWidth,\n      itemHeight: itemHeight\n    };\n    _this._panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: function onStartShouldSetPanResponder(evt, gestureState) {\n        return true;\n      },\n      onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture(evt, gestureState) {\n        _this.isMovePanResponder = false;\n        return false;\n      },\n      onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder(evt, gestureState) {\n        return _this.isMovePanResponder;\n      },\n      onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture(evt, gestureState) {\n        return _this.isMovePanResponder;\n      },\n      onPanResponderGrant: function onPanResponderGrant(evt, gestureState) {},\n      onPanResponderMove: function onPanResponderMove(evt, gestureState) {\n        return _this.moveTouch(evt, gestureState);\n      },\n      onPanResponderRelease: function onPanResponderRelease(evt, gestureState) {\n        return _this.endTouch(evt);\n      },\n      onPanResponderTerminationRequest: function onPanResponderTerminationRequest(evt, gestureState) {\n        return false;\n      },\n      onShouldBlockNativeResponder: function onShouldBlockNativeResponder(evt, gestureState) {\n        return false;\n      }\n    });\n    return _this;\n  }\n  _createClass(AutoDragSortableView, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.initTag();\n      this.autoMeasureHeight();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.autoMeasureHeight();\n    }\n  }, {\n    key: \"startTouch\",\n    value: function startTouch(touchIndex) {\n      var _this2 = this;\n      var fixedItems = this.props.fixedItems;\n      if (fixedItems.length > 0 && fixedItems.includes(touchIndex)) {\n        return;\n      }\n      this.isHasMove = false;\n      this.isHasMeasure = true;\n      if (!this.props.sortable) return;\n      var key = this._getKey(touchIndex);\n      if (this.sortRefs.has(key)) {\n        if (this.isStartupAuto()) {\n          this.autoObj.scrollDy = this.autoObj.hasScrollDy = this.curScrollData.offsetY;\n        }\n        this.setState({\n          scrollEnabled: false\n        });\n        if (this.props.onDragStart) {\n          this.props.onDragStart(touchIndex);\n        }\n        Animated.timing(this.state.dataSource[touchIndex].scaleValue, {\n          toValue: this.props.maxScale,\n          duration: this.props.scaleDuration,\n          useNativeDriver: false\n        }).start(function () {\n          _this2.touchCurItem = {\n            ref: _this2.sortRefs.get(key),\n            index: touchIndex,\n            originLeft: _this2.state.dataSource[touchIndex].originLeft,\n            originTop: _this2.state.dataSource[touchIndex].originTop,\n            moveToIndex: touchIndex\n          };\n          _this2.isMovePanResponder = true;\n        });\n      }\n    }\n  }, {\n    key: \"moveTouch\",\n    value: function moveTouch(nativeEvent, gestureState) {\n      var _this3 = this;\n      this.isHasMove = true;\n      if (this.touchCurItem) {\n        var dx = gestureState.dx,\n          dy = gestureState.dy,\n          vy = gestureState.vy;\n        var itemWidth = this.state.itemWidth;\n        var itemHeight = this.state.itemHeight;\n        var rowNum = parseInt(this.props.parentWidth / itemWidth);\n        var maxWidth = this.props.parentWidth - itemWidth;\n        var maxHeight = itemHeight * Math.ceil(this.state.dataSource.length / rowNum) - itemHeight;\n        if (!this.props.isDragFreely) {\n          if (this.touchCurItem.originLeft + dx < 0) {\n            dx = -this.touchCurItem.originLeft;\n          } else if (this.touchCurItem.originLeft + dx > maxWidth) {\n            dx = maxWidth - this.touchCurItem.originLeft;\n          }\n          if (!this.isStartupAuto()) {\n            if (this.touchCurItem.originTop + dy < 0) {\n              dy = -this.touchCurItem.originTop;\n            } else if (this.touchCurItem.originTop + dy > maxHeight) {\n              dy = maxHeight - this.touchCurItem.originTop;\n            }\n          }\n        }\n        if (this.isStartupAuto()) {\n          var curDis = this.touchCurItem.originTop + dy - this.autoObj.hasScrollDy;\n          if (nativeEvent != null) {\n            var tempStatus = this.autoObj.forceScrollStatus;\n            var minDownDiss = curDis + this.props.childrenHeight * (1 + (this.props.maxScale - 1) / 2) + this.props.marginChildrenTop + this.props.headerViewHeight;\n            var maxUpDiss = curDis + this.props.marginChildrenTop + this.props.headerViewHeight;\n            if ((tempStatus === 0 || tempStatus === 2) && vy > 0.01 && minDownDiss > this.curScrollData.windowHeight) {\n              this.autoObj.curDy = dy;\n              this.autoObj.forceScrollStatus = 1;\n              this.startAutoScroll();\n            } else if ((tempStatus === 0 || tempStatus === -2) && -vy > 0.01 && maxUpDiss < 0) {\n              this.autoObj.curDy = dy;\n              this.autoObj.forceScrollStatus = -1;\n              this.startAutoScroll();\n            }\n          }\n          if (vy != null) {\n            if (this.autoObj.forceScrollStatus >= 1 && -vy > 0.01) {\n              this.autoObj.forceScrollStatus = 0;\n            } else if (this.autoObj.forceScrollStatus <= -1 && vy > 0.01) {\n              this.autoObj.forceScrollStatus = 0;\n            }\n          }\n          this.autoObj.scrollDx = dx;\n          dy = dy - this.autoObj.hasScrollDy;\n          if (nativeEvent != null) {\n            dy = dy + this.autoObj.scrollDy;\n            if (this.autoObj.forceScrollStatus === 1 || this.autoObj.forceScrollStatus === -1) {\n              return;\n            }\n          }\n        }\n        var left = this.touchCurItem.originLeft + dx;\n        var top = this.touchCurItem.originTop + dy;\n        this.touchCurItem.ref.setNativeProps({\n          style: {\n            zIndex: touchZIndex\n          }\n        });\n        this.state.dataSource[this.touchCurItem.index].position.setValue({\n          x: left,\n          y: top\n        });\n        var moveToIndex = 0;\n        var moveXNum = dx / itemWidth;\n        var moveYNum = dy / itemHeight;\n        if (moveXNum > 0) {\n          moveXNum = parseInt(moveXNum + 0.5);\n        } else if (moveXNum < 0) {\n          moveXNum = parseInt(moveXNum - 0.5);\n        }\n        if (moveYNum > 0) {\n          moveYNum = parseInt(moveYNum + 0.5);\n        } else if (moveYNum < 0) {\n          moveYNum = parseInt(moveYNum - 0.5);\n        }\n        moveToIndex = this.touchCurItem.index + moveXNum + moveYNum * rowNum;\n        if (moveToIndex > this.state.dataSource.length - 1) {\n          moveToIndex = this.state.dataSource.length - 1;\n        } else if (moveToIndex < 0) {\n          moveToIndex = 0;\n        }\n        if (this.props.onDragging) {\n          this.props.onDragging(gestureState, left, top, moveToIndex);\n        }\n        if (this.touchCurItem.moveToIndex != moveToIndex) {\n          var fixedItems = this.props.fixedItems;\n          if (fixedItems.length > 0 && fixedItems.includes(moveToIndex)) return;\n          this.touchCurItem.moveToIndex = moveToIndex;\n          this.state.dataSource.forEach(function (item, index) {\n            var nextItem = null;\n            if (index > _this3.touchCurItem.index && index <= moveToIndex) {\n              nextItem = _this3.state.dataSource[index - 1];\n            } else if (index >= moveToIndex && index < _this3.touchCurItem.index) {\n              nextItem = _this3.state.dataSource[index + 1];\n            } else if (index != _this3.touchCurItem.index && (item.position.x._value != item.originLeft || item.position.y._value != item.originTop)) {\n              nextItem = _this3.state.dataSource[index];\n            } else if (_this3.touchCurItem.index - moveToIndex > 0 && moveToIndex == index + 1 || _this3.touchCurItem.index - moveToIndex < 0 && moveToIndex == index - 1) {\n              nextItem = _this3.state.dataSource[index];\n            }\n            if (nextItem != null) {\n              Animated.timing(item.position, {\n                toValue: {\n                  x: parseInt(nextItem.originLeft + 0.5),\n                  y: parseInt(nextItem.originTop + 0.5)\n                },\n                duration: _this3.props.slideDuration,\n                easing: Easing.out(Easing.quad),\n                useNativeDriver: false\n              }).start();\n            }\n          });\n        }\n      }\n    }\n  }, {\n    key: \"endTouch\",\n    value: function endTouch(nativeEvent) {\n      var _this4 = this;\n      this.isHasMove = false;\n      this.initTag();\n      if (this.touchCurItem) {\n        this.setState({\n          scrollEnabled: true\n        });\n        Animated.timing(this.state.dataSource[this.touchCurItem.index].scaleValue, {\n          toValue: 1,\n          duration: this.props.scaleDuration,\n          useNativeDriver: false\n        }).start(function () {\n          if (_this4.touchCurItem) {\n            _this4.touchCurItem.ref.setNativeProps({\n              style: {\n                zIndex: defaultZIndex\n              }\n            });\n            _this4.changePosition(_this4.touchCurItem.index, _this4.touchCurItem.moveToIndex);\n            if (_this4.props.onDragEnd) {\n              _this4.props.onDragEnd(_this4.touchCurItem.index, _this4.touchCurItem.moveToIndex);\n            }\n            _this4.touchCurItem = null;\n          }\n        });\n      }\n    }\n  }, {\n    key: \"onPressOut\",\n    value: function onPressOut() {\n      var _this5 = this;\n      this.isScaleRecovery = setTimeout(function () {\n        if (_this5.isMovePanResponder && !_this5.isHasMove) {\n          _this5.endTouch();\n        }\n      }, 220);\n    }\n  }, {\n    key: \"changePosition\",\n    value: function changePosition(startIndex, endIndex) {\n      var _this6 = this;\n      if (startIndex == endIndex) {\n        var curItem = this.state.dataSource[startIndex];\n        if (curItem != null) {\n          curItem.position.setValue({\n            x: parseInt(curItem.originLeft + 0.5),\n            y: parseInt(curItem.originTop + 0.5)\n          });\n        }\n        return;\n      }\n      var isCommon = true;\n      if (startIndex > endIndex) {\n        isCommon = false;\n        var tempIndex = startIndex;\n        startIndex = endIndex;\n        endIndex = tempIndex;\n      }\n      var newDataSource = _toConsumableArray(this.state.dataSource).map(function (item, index) {\n        var newIndex = null;\n        if (isCommon) {\n          if (endIndex > index && index >= startIndex) {\n            newIndex = index + 1;\n          } else if (endIndex == index) {\n            newIndex = startIndex;\n          }\n        } else {\n          if (endIndex >= index && index > startIndex) {\n            newIndex = index - 1;\n          } else if (startIndex == index) {\n            newIndex = endIndex;\n          }\n        }\n        if (newIndex != null) {\n          var newItem = _objectSpread({}, _this6.state.dataSource[newIndex]);\n          newItem.originLeft = item.originLeft;\n          newItem.originTop = item.originTop;\n          newItem.position = new Animated.ValueXY({\n            x: parseInt(item.originLeft + 0.5),\n            y: parseInt(item.originTop + 0.5)\n          });\n          item = newItem;\n        }\n        return item;\n      });\n      this.setState({\n        dataSource: newDataSource\n      }, function () {\n        if (_this6.props.onDataChange) {\n          _this6.props.onDataChange(_this6.getOriginalData());\n        }\n        var startItem = _this6.state.dataSource[startIndex];\n        _this6.state.dataSource[startIndex].position.setValue({\n          x: parseInt(startItem.originLeft + 0.5),\n          y: parseInt(startItem.originTop + 0.5)\n        });\n        var endItem = _this6.state.dataSource[endIndex];\n        _this6.state.dataSource[endIndex].position.setValue({\n          x: parseInt(endItem.originLeft + 0.5),\n          y: parseInt(endItem.originTop + 0.5)\n        });\n      });\n    }\n  }, {\n    key: \"reComplexDataSource\",\n    value: function reComplexDataSource(isInit, props) {\n      var itemWidth = this.state.itemWidth;\n      var itemHeight = this.state.itemHeight;\n      var rowNum = parseInt(props.parentWidth / itemWidth);\n      var dataSource = props.dataSource.map(function (item, index) {\n        var newData = {};\n        var left = index % rowNum * itemWidth;\n        var top = parseInt(index / rowNum) * itemHeight;\n        newData.data = item;\n        newData.originIndex = index;\n        newData.originLeft = left;\n        newData.originTop = top;\n        newData.position = new Animated.ValueXY({\n          x: parseInt(left + 0.5),\n          y: parseInt(top + 0.5)\n        });\n        newData.scaleValue = new Animated.Value(1);\n        return newData;\n      });\n      if (isInit) {\n        this.state = {\n          scrollEnabled: true,\n          dataSource: dataSource,\n          height: Math.ceil(dataSource.length / rowNum) * itemHeight\n        };\n      } else {\n        this.setState({\n          dataSource: dataSource,\n          height: Math.ceil(dataSource.length / rowNum) * itemHeight\n        });\n      }\n    }\n  }, {\n    key: \"getOriginalData\",\n    value: function getOriginalData() {\n      return this.state.dataSource.map(function (item, index) {\n        return item.data;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n      return _jsxs(ScrollView, {\n        bounces: false,\n        scrollEventThrottle: 1,\n        scrollIndicatorInsets: this.props.scrollIndicatorInsets,\n        ref: function ref(scrollRef) {\n          if (_this7.props.onScrollRef) _this7.props.onScrollRef(scrollRef);\n          _this7.scrollRef = scrollRef;\n          return _this7.scrollRef;\n        },\n        scrollEnabled: this.state.scrollEnabled,\n        onScroll: this.onScrollListener,\n        style: styles.container,\n        children: [this.props.renderHeaderView ? this.props.renderHeaderView : null, _jsx(View, {\n          style: [styles.swipe, {\n            width: this.props.parentWidth,\n            height: this.state.height\n          }],\n          children: this._renderItemView()\n        }), this.props.renderBottomView ? this.props.renderBottomView : null]\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.isScaleRecovery) clearTimeout(this.isScaleRecovery);\n      this.clearAutoInterval();\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextprops, prevState) {\n      var itemWidth = nextprops.childrenWidth + nextprops.marginChildrenLeft + nextprops.marginChildrenRight;\n      var itemHeight = nextprops.childrenHeight + nextprops.marginChildrenTop + nextprops.marginChildrenBottom;\n      if (nextprops.dataSource != prevState.curPropsDataSource || itemWidth !== prevState.itemWidth || itemHeight !== prevState.itemHeight) {\n        var rowNum = parseInt(nextprops.parentWidth / itemWidth);\n        var dataSource = nextprops.dataSource.map(function (item, index) {\n          var newData = {};\n          var left = index % rowNum * itemWidth;\n          var top = parseInt(index / rowNum) * itemHeight;\n          newData.data = item;\n          newData.originIndex = index;\n          newData.originLeft = left;\n          newData.originTop = top;\n          newData.position = new Animated.ValueXY({\n            x: parseInt(left + 0.5),\n            y: parseInt(top + 0.5)\n          });\n          newData.scaleValue = new Animated.Value(1);\n          return newData;\n        });\n        return {\n          dataSource: dataSource,\n          curPropsDataSource: nextprops.dataSource,\n          height: Math.ceil(dataSource.length / rowNum) * itemHeight,\n          itemWidth: itemWidth,\n          itemHeight: itemHeight\n        };\n      }\n      return null;\n    }\n  }]);\n  return AutoDragSortableView;\n}(Component);\nexport { AutoDragSortableView as default };\nAutoDragSortableView.propTypes = {\n  dataSource: PropTypes.array.isRequired,\n  parentWidth: PropTypes.number,\n  childrenHeight: PropTypes.number.isRequired,\n  childrenWidth: PropTypes.number.isRequired,\n  marginChildrenTop: PropTypes.number,\n  marginChildrenBottom: PropTypes.number,\n  marginChildrenLeft: PropTypes.number,\n  marginChildrenRight: PropTypes.number,\n  sortable: PropTypes.bool,\n  onClickItem: PropTypes.func,\n  onDragStart: PropTypes.func,\n  onDragEnd: PropTypes.func,\n  onDataChange: PropTypes.func,\n  renderItem: PropTypes.func.isRequired,\n  scaleStatus: PropTypes.oneOf(['scale', 'scaleX', 'scaleY']),\n  fixedItems: PropTypes.array,\n  keyExtractor: PropTypes.func,\n  delayLongPress: PropTypes.number,\n  isDragFreely: PropTypes.bool,\n  onDragging: PropTypes.func,\n  maxScale: PropTypes.number,\n  minOpacity: PropTypes.number,\n  scaleDuration: PropTypes.number,\n  slideDuration: PropTypes.number,\n  autoThrottle: PropTypes.number,\n  autoThrottleDuration: PropTypes.number,\n  renderHeaderView: PropTypes.element,\n  scrollIndicatorInsets: PropTypes.shape({\n    top: PropTypes.number,\n    left: PropTypes.number,\n    bottom: PropTypes.number,\n    right: PropTypes.number\n  }),\n  headerViewHeight: PropTypes.number,\n  renderBottomView: PropTypes.element,\n  bottomViewHeight: PropTypes.number,\n  onScrollListener: PropTypes.func,\n  onScrollRef: PropTypes.func\n};\nAutoDragSortableView.defaultProps = {\n  marginChildrenTop: 0,\n  marginChildrenBottom: 0,\n  marginChildrenLeft: 0,\n  marginChildrenRight: 0,\n  parentWidth: width,\n  sortable: true,\n  scaleStatus: 'scale',\n  fixedItems: [],\n  isDragFreely: false,\n  maxScale: 1.1,\n  minOpacity: 0.8,\n  scaleDuration: 100,\n  slideDuration: 300,\n  autoThrottle: 2,\n  autoThrottleDuration: 10,\n  scrollIndicatorInsets: {\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 1\n  },\n  headerViewHeight: 0,\n  bottomViewHeight: 0\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  swipe: {\n    flexWrap: 'wrap',\n    flexDirection: 'row'\n  },\n  item: {\n    position: 'absolute',\n    zIndex: defaultZIndex\n  }\n});","map":{"version":3,"names":["React","Component","Animated","Dimensions","Easing","PanResponder","StyleSheet","TouchableOpacity","View","ScrollView","Platform","jsx","_jsx","jsxs","_jsxs","PropTypes","require","_Dimensions$get","get","width","height","defaultZIndex","touchZIndex","AutoDragSortableView","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","autoMeasureHeight","isHasMeasure","setTimeout","scrollTo","initTag","clearAutoInterval","autoObj","curDy","scrollDx","scrollDy","hasScrollDy","forceScrollStatus","dealtScrollStatus","scrollData","curScrollData","offsetY","totalHeight","windowHeight","autoInterval","clearInterval","startAutoScroll","setInterval","hasScroll","autoThrottle","OS","isHasMove","moveTouch","dx","dy","autoThrottleDuration","isStartupAuto","animated","arguments","length","undefined","scrollRef","x","y","onScrollListener","event","nativeEvent","contentSize","layoutMeasurement","contentOffset","_getKey","index","item","state","dataSource","keyExtractor","data","originIndex","_renderItemView","_this$props","maxScale","minOpacity","inputRange","outputRange","map","transformObj","scaleStatus","scaleValue","key","_objectSpread","ref","sortRefs","set","_panResponder","panHandlers","style","styles","marginTop","marginChildrenTop","marginBottom","marginChildrenBottom","marginLeft","marginChildrenLeft","marginRight","marginChildrenRight","left","position","top","opacity","interpolate","transform","children","activeOpacity","delayLongPress","onPressOut","onLongPress","startTouch","onPress","onClickItem","getOriginalData","renderItem","Map","itemWidth","childrenWidth","itemHeight","childrenHeight","rowNum","parseInt","parentWidth","newData","originLeft","originTop","ValueXY","Value","curPropsDataSource","Math","ceil","create","onStartShouldSetPanResponder","evt","gestureState","onStartShouldSetPanResponderCapture","isMovePanResponder","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderGrant","onPanResponderMove","onPanResponderRelease","endTouch","onPanResponderTerminationRequest","onShouldBlockNativeResponder","_createClass","value","componentDidMount","componentDidUpdate","touchIndex","_this2","fixedItems","includes","sortable","has","setState","scrollEnabled","onDragStart","timing","toValue","duration","scaleDuration","useNativeDriver","start","touchCurItem","moveToIndex","_this3","vy","maxWidth","maxHeight","isDragFreely","curDis","tempStatus","minDownDiss","headerViewHeight","maxUpDiss","setNativeProps","zIndex","setValue","moveXNum","moveYNum","onDragging","forEach","nextItem","_value","slideDuration","easing","out","quad","_this4","changePosition","onDragEnd","_this5","isScaleRecovery","startIndex","endIndex","_this6","curItem","isCommon","tempIndex","newDataSource","_toConsumableArray","newIndex","newItem","onDataChange","startItem","endItem","reComplexDataSource","isInit","render","_this7","bounces","scrollEventThrottle","scrollIndicatorInsets","onScrollRef","onScroll","container","renderHeaderView","swipe","renderBottomView","componentWillUnmount","clearTimeout","getDerivedStateFromProps","nextprops","prevState","default","propTypes","array","isRequired","number","bool","func","oneOf","element","shape","bottom","right","bottomViewHeight","defaultProps","flex","flexWrap","flexDirection"],"sources":["/home/cballard@int.integrity.com/public_html/formBuilder/frontendFormBuilder/node_modules/react-native-drag-sort/AutoDragSortableView.js"],"sourcesContent":["import React, {Component} from 'react'\nimport {Animated, Dimensions, Easing, PanResponder, StyleSheet, TouchableOpacity, View, ScrollView,Platform} from 'react-native'\n\nconst PropTypes = require('prop-types')\nconst {width,height} = Dimensions.get('window')\n\nconst defaultZIndex = 8\nconst touchZIndex = 99\n\nexport default class AutoDragSortableView extends Component{\n\n    constructor(props) {\n        super(props)\n\n        this.sortRefs = new Map()\n\n        const itemWidth = props.childrenWidth+props.marginChildrenLeft+props.marginChildrenRight\n        const itemHeight = props.childrenHeight + props.marginChildrenTop + props.marginChildrenBottom\n\n        // this.reComplexDataSource(true,props) // react < 16.3\n        // react > 16.3 Fiber\n        const rowNum = parseInt(props.parentWidth / itemWidth);\n        const dataSource = props.dataSource.map((item, index) => {\n            const newData = {}\n            const left = (index % rowNum) * itemWidth\n            const top = parseInt((index / rowNum)) * itemHeight\n\n            newData.data = item\n            newData.originIndex = index\n            newData.originLeft = left\n            newData.originTop = top\n            newData.position = new Animated.ValueXY({\n                x: parseInt(left + 0.5),\n                y: parseInt(top + 0.5),\n            })\n            newData.scaleValue = new Animated.Value(1)\n            return newData\n        });\n        this.state = {\n            dataSource: dataSource,\n            curPropsDataSource: props.dataSource,\n            height: Math.ceil(dataSource.length / rowNum) * itemHeight,\n            itemWidth,\n            itemHeight,\n        };\n\n        this._panResponder = PanResponder.create({\n            onStartShouldSetPanResponder: (evt, gestureState) => true,\n            onStartShouldSetPanResponderCapture: (evt, gestureState) => {\n                this.isMovePanResponder = false\n                return false\n            },\n            onMoveShouldSetPanResponder: (evt, gestureState) => this.isMovePanResponder,\n            onMoveShouldSetPanResponderCapture: (evt, gestureState) => this.isMovePanResponder,\n\n            onPanResponderGrant: (evt, gestureState) => {},\n            onPanResponderMove: (evt, gestureState) => this.moveTouch(evt, gestureState),\n            onPanResponderRelease: (evt, gestureState) => this.endTouch(evt),\n\n            onPanResponderTerminationRequest: (evt, gestureState) => false,\n            onShouldBlockNativeResponder: (evt, gestureState) => false,\n        })\n    }\n\n    // react < 16.3\n    // componentWillReceiveProps(nextProps) {\n    //     if (this.props.dataSource != nextProps.dataSource) {\n    //         this.reComplexDataSource(false,nextProps)\n    //     }\n    // }\n\n    // react > 16.3 Fiber\n    static getDerivedStateFromProps(nextprops, prevState) {\n        const itemWidth = nextprops.childrenWidth + nextprops.marginChildrenLeft + nextprops.marginChildrenRight\n        const itemHeight = nextprops.childrenHeight + nextprops.marginChildrenTop + nextprops.marginChildrenBottom\n        if (nextprops.dataSource != prevState.curPropsDataSource || itemWidth !== prevState.itemWidth || itemHeight !== prevState.itemHeight) {\n            \n            const rowNum = parseInt(nextprops.parentWidth / itemWidth);\n            const dataSource = nextprops.dataSource.map((item, index) => {\n                const newData = {};\n                const left = index % rowNum * itemWidth;\n                const top = parseInt(index / rowNum) * itemHeight;\n\n                newData.data = item;\n                newData.originIndex = index;\n                newData.originLeft = left;\n                newData.originTop = top;\n                newData.position = new Animated.ValueXY({\n                    x: parseInt(left + 0.5),\n                    y: parseInt(top + 0.5),\n                });\n                newData.scaleValue = new Animated.Value(1);\n                return newData;\n            });\n            return {\n                dataSource: dataSource,\n                curPropsDataSource: nextprops.dataSource,\n                height: Math.ceil(dataSource.length / rowNum) * itemHeight,\n                itemWidth,\n                itemHeight,\n            }\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        this.initTag()\n        this.autoMeasureHeight()\n    }\n\n    componentDidUpdate() {\n        this.autoMeasureHeight()\n    }\n\n    // Compatible with different systems and paging loading\n    autoMeasureHeight = () => {\n        if (!this.isHasMeasure) {\n            setTimeout(()=>{\n                this.scrollTo(1, false)\n                this.scrollTo(0, false)\n            }, 30)\n        }\n    }\n\n    // Initialization tag\n    initTag = () => {\n        this.clearAutoInterval();\n        this.autoObj = {\n            curDy: 0,\n            scrollDx: 0,\n            scrollDy: 0,\n            hasScrollDy: null,\n            forceScrollStatus: 0, // 0: NONE 1: DOWN 2: ONLY_DOWN -1: UP -2: ONLY_UP\n        }\n    }\n\n    // Unified processing\n    dealtScrollStatus = () => {\n        const scrollData = this.curScrollData;\n        if (scrollData == null || scrollData.offsetY == null) return;\n        const { totalHeight, windowHeight, offsetY } = scrollData;\n        if (totalHeight <= windowHeight + offsetY) {\n            this.autoObj.forceScrollStatus = -2;\n        } else if (offsetY <= 0) {\n            this.autoObj.forceScrollStatus = 2;\n        }\n    }\n\n    // Handle automatic slide timer\n    clearAutoInterval = () => {\n        if (this.autoInterval) {\n            clearInterval(this.autoInterval);\n            this.autoInterval = null;\n        }\n    }\n\n    startAutoScroll = () => {\n        if (this.autoInterval != null) {\n            return;\n        }\n\n        // Start automatic swipe\n        this.autoInterval = setInterval(() => {\n            if (this.autoObj.forceScrollStatus === 0 ||\n                this.autoObj.forceScrollStatus === 2 ||\n                this.autoObj.forceScrollStatus === -2) {\n                this.clearAutoInterval();\n                return;\n            }\n            // Anti-shake 1.x1\n            if (!this.curScrollData.hasScroll) {\n                return;\n            }\n            if (this.autoObj.forceScrollStatus === 1) {\n                this.autoObj.scrollDy = this.autoObj.scrollDy + this.props.autoThrottle;\n            } else if (this.autoObj.forceScrollStatus === -1){\n                this.autoObj.scrollDy = this.autoObj.scrollDy - this.props.autoThrottle;\n            }\n            this.scrollTo(this.autoObj.scrollDy, false);\n            this.dealtScrollStatus();\n            // Android slide time 30ms-50ms, iOS close to 0ms, optimize Android jitter\n            if (Platform.OS === 'android') {\n                setTimeout(()=>{ \n                    if (this.isHasMove) this.moveTouch(null,{dx: this.autoObj.scrollDx, dy: this.autoObj.curDy + this.autoObj.scrollDy})\n                },1)\n            } else {\n                this.moveTouch(null,{dx: this.autoObj.scrollDx, dy: this.autoObj.curDy + this.autoObj.scrollDy})\n            }\n            \n        }, this.props.autoThrottleDuration)\n    }\n\n    startTouch(touchIndex) {\n\n        //Prevent drag\n        const fixedItems = this.props.fixedItems;\n        if (fixedItems.length > 0 && fixedItems.includes(touchIndex)){\n            return;\n        }\n\n        this.isHasMove = false\n        this.isHasMeasure = true\n\n        if (!this.props.sortable) return\n\n        const key = this._getKey(touchIndex);\n        if (this.sortRefs.has(key)) {\n\n            // Initialization data\n            if (this.isStartupAuto()) {\n                this.autoObj.scrollDy = this.autoObj.hasScrollDy = this.curScrollData.offsetY;\n            }\n\n            this.setState({\n                scrollEnabled: false\n            })\n            if (this.props.onDragStart) {\n                this.props.onDragStart(touchIndex) \n            }\n            Animated.timing(\n                this.state.dataSource[touchIndex].scaleValue,\n                {\n                    toValue: this.props.maxScale,\n                    duration: this.props.scaleDuration,\n                    useNativeDriver: false,\n                }\n            ).start(()=>{\n                this.touchCurItem = {\n                    ref: this.sortRefs.get(key),\n                    index: touchIndex,\n                    originLeft: this.state.dataSource[touchIndex].originLeft,\n                    originTop: this.state.dataSource[touchIndex].originTop,\n                    moveToIndex: touchIndex,\n                }\n                this.isMovePanResponder = true\n            })\n        }\n    }\n\n\n\n    moveTouch (nativeEvent,gestureState) {\n\n        this.isHasMove = true;\n\n        //if (this.isScaleRecovery) clearTimeout(this.isScaleRecovery)\n\n        if (this.touchCurItem) {\n\n            let {dx, dy, vy} = gestureState;\n            const itemWidth = this.state.itemWidth;\n            const itemHeight = this.state.itemHeight;\n\n            const rowNum = parseInt(this.props.parentWidth/itemWidth);\n            const maxWidth = this.props.parentWidth-itemWidth;\n            const maxHeight = itemHeight*Math.ceil(this.state.dataSource.length/rowNum) - itemHeight;\n\n            // Is it free to drag\n            if (!this.props.isDragFreely) {\n                // Maximum or minimum after out of bounds\n                if (this.touchCurItem.originLeft + dx < 0) {\n                    dx = -this.touchCurItem.originLeft\n                } else if (this.touchCurItem.originLeft + dx > maxWidth) {\n                    dx = maxWidth - this.touchCurItem.originLeft\n                }\n                if (!this.isStartupAuto()) {\n                    if (this.touchCurItem.originTop + dy < 0) {\n                        dy = -this.touchCurItem.originTop\n                    } else if (this.touchCurItem.originTop + dy > maxHeight) {\n                        dy = maxHeight - this.touchCurItem.originTop\n                    }\n                }\n            }\n\n            if (this.isStartupAuto()) {\n                const curDis = this.touchCurItem.originTop + dy - this.autoObj.hasScrollDy;\n                if (nativeEvent != null) {\n                    const tempStatus = this.autoObj.forceScrollStatus;\n                    // Automatic sliding\n                    const minDownDiss = curDis + this.props.childrenHeight * (1 + (this.props.maxScale - 1) / 2) + this.props.marginChildrenTop + this.props.headerViewHeight;\n                    const maxUpDiss = curDis + this.props.marginChildrenTop + this.props.headerViewHeight;\n                    if ((tempStatus === 0 || tempStatus === 2) && vy > 0.01 && minDownDiss > this.curScrollData.windowHeight) {\n                        this.autoObj.curDy = dy;\n                        this.autoObj.forceScrollStatus = 1;\n                        this.startAutoScroll();\n                    } else if ((tempStatus === 0 || tempStatus === -2) && -vy > 0.01 && maxUpDiss < 0) {\n                        this.autoObj.curDy = dy;\n                        this.autoObj.forceScrollStatus = -1;\n                        this.startAutoScroll();\n                    }\n                }\n                \n                // Determine whether to change steering\n                if (vy != null) {\n                    // Slide down 1、2\n                    if (this.autoObj.forceScrollStatus >= 1 && -vy > 0.01) {\n                        this.autoObj.forceScrollStatus = 0;\n                        // Slide up -1、-2\n                    } else if (this.autoObj.forceScrollStatus <= -1 && vy > 0.01) {\n                        this.autoObj.forceScrollStatus = 0;\n                    }\n                }\n\n                // Remember the X axis\n                this.autoObj.scrollDx = dx;\n                // Correction data 1\n                dy = dy - this.autoObj.hasScrollDy;\n                if (nativeEvent != null) {\n                    // Correction data 2\n                    dy = dy + this.autoObj.scrollDy; \n                    // Prevent fingers from sliding when sliding automatically\n                    if (this.autoObj.forceScrollStatus === 1 || this.autoObj.forceScrollStatus === -1) {\n                        return;\n                    }                    \n                }\n            }\n\n            const left = this.touchCurItem.originLeft + dx;\n            const top = this.touchCurItem.originTop + dy;\n\n            this.touchCurItem.ref.setNativeProps({\n                style: {\n                    zIndex: touchZIndex,\n                }\n            })\n\n            this.state.dataSource[this.touchCurItem.index].position.setValue({\n                x: left,\n                y: top,\n            })\n\n            let moveToIndex = 0\n            let moveXNum = dx/itemWidth\n            let moveYNum = dy/itemHeight\n            if (moveXNum > 0) {\n                moveXNum = parseInt(moveXNum+0.5)\n            } else if (moveXNum < 0) {\n                moveXNum = parseInt(moveXNum-0.5)\n            }\n            if (moveYNum > 0) {\n                moveYNum = parseInt(moveYNum+0.5)\n            } else if (moveYNum < 0) {\n                moveYNum = parseInt(moveYNum-0.5)\n            }\n\n            moveToIndex = this.touchCurItem.index+moveXNum+moveYNum*rowNum\n\n            if (moveToIndex > this.state.dataSource.length-1) {\n                moveToIndex = this.state.dataSource.length-1\n            } else if (moveToIndex < 0) {\n                moveToIndex = 0;\n            }\n\n            if (this.props.onDragging) {\n                this.props.onDragging(gestureState, left, top, moveToIndex)\n            }\n\n            if (this.touchCurItem.moveToIndex != moveToIndex ) {\n                const fixedItems = this.props.fixedItems;\n                if (fixedItems.length > 0 && fixedItems.includes(moveToIndex)) return;\n                this.touchCurItem.moveToIndex = moveToIndex\n                this.state.dataSource.forEach((item,index)=>{\n\n                    let nextItem = null\n                    if (index > this.touchCurItem.index && index <= moveToIndex) {\n                        nextItem = this.state.dataSource[index-1]\n\n                    } else if (index >= moveToIndex && index < this.touchCurItem.index) {\n                        nextItem = this.state.dataSource[index+1]\n\n                    } else if (index != this.touchCurItem.index &&\n                        (item.position.x._value != item.originLeft ||\n                            item.position.y._value != item.originTop)) {\n                        nextItem = this.state.dataSource[index]\n\n                    } else if ((this.touchCurItem.index-moveToIndex > 0 && moveToIndex == index+1) ||\n                        (this.touchCurItem.index-moveToIndex < 0 && moveToIndex == index-1)) {\n                        nextItem = this.state.dataSource[index]\n                    }\n\n                    if (nextItem != null) {\n                        Animated.timing(\n                            item.position,\n                            {\n                                toValue: {x: parseInt(nextItem.originLeft+0.5),y: parseInt(nextItem.originTop+0.5)},\n                                duration: this.props.slideDuration,\n                                easing: Easing.out(Easing.quad),\n                                useNativeDriver: false,\n                            }\n                        ).start()\n                    }\n\n                })\n            }\n\n        }\n    }\n\n    endTouch (nativeEvent) {\n        this.isHasMove = false;\n\n        this.initTag()\n        //clear\n        if (this.touchCurItem) {\n            this.setState({\n                scrollEnabled: true\n            })\n            //this.state.dataSource[this.touchCurItem.index].scaleValue.setValue(1)\n            Animated.timing(\n                this.state.dataSource[this.touchCurItem.index].scaleValue,\n                {\n                    toValue: 1,\n                    duration: this.props.scaleDuration,\n                    useNativeDriver: false,\n                }\n            ).start(()=>{\n                if (this.touchCurItem) {\n                    this.touchCurItem.ref.setNativeProps({\n                        style: {\n                            zIndex: defaultZIndex,\n                        }\n                    })\n                    this.changePosition(this.touchCurItem.index,this.touchCurItem.moveToIndex)\n                    if (this.props.onDragEnd) {\n                      this.props.onDragEnd(this.touchCurItem.index,this.touchCurItem.moveToIndex)\n                    }\n                    this.touchCurItem = null\n                }\n            })\n            \n        }\n    }\n\n    onPressOut () {\n        this.isScaleRecovery = setTimeout(()=> {\n            if (this.isMovePanResponder && !this.isHasMove) {\n                this.endTouch()\n            }\n        },220)\n    }\n\n    changePosition(startIndex,endIndex) {\n\n        if (startIndex == endIndex) {\n            const curItem = this.state.dataSource[startIndex]\n            if (curItem != null) {\n                curItem.position.setValue({\n                    x: parseInt(curItem.originLeft + 0.5),\n                    y: parseInt(curItem.originTop + 0.5),\n                })\n            }\n            return;\n        }\n\n        let isCommon = true\n        if (startIndex > endIndex) {\n            isCommon = false\n            let tempIndex = startIndex\n            startIndex = endIndex\n            endIndex = tempIndex\n        }\n\n        const newDataSource = [...this.state.dataSource].map((item,index)=>{\n            let newIndex = null\n            if (isCommon) {\n                if (endIndex > index && index >= startIndex) {\n                    newIndex = index+1\n                } else if (endIndex == index) {\n                    newIndex = startIndex\n                }\n            } else {\n                if (endIndex >= index && index > startIndex) {\n                    newIndex = index-1\n                } else if (startIndex == index) {\n                    newIndex = endIndex\n                }\n            }\n\n            if (newIndex != null) {\n                const newItem = {...this.state.dataSource[newIndex]}\n                newItem.originLeft = item.originLeft\n                newItem.originTop = item.originTop\n                newItem.position = new Animated.ValueXY({\n                    x: parseInt(item.originLeft+0.5),\n                    y: parseInt(item.originTop+0.5),\n                })\n                item = newItem\n            }\n\n            return item\n        })\n\n        this.setState({\n            dataSource: newDataSource\n        },()=>{\n            if (this.props.onDataChange) {\n                this.props.onDataChange(this.getOriginalData())\n            }\n            // Prevent RN from drawing the beginning and end\n            const startItem = this.state.dataSource[startIndex]\n            this.state.dataSource[startIndex].position.setValue({\n                x: parseInt(startItem.originLeft+0.5),\n                y: parseInt(startItem.originTop+0.5),\n            })\n            const endItem = this.state.dataSource[endIndex]\n            this.state.dataSource[endIndex].position.setValue({\n                x: parseInt(endItem.originLeft+0.5),\n                y: parseInt(endItem.originTop+0.5),\n            })\n        })\n\n    }\n\n    reComplexDataSource(isInit,props) {\n        const itemWidth = this.state.itemWidth;\n        const itemHeight = this.state.itemHeight;\n        const rowNum = parseInt(props.parentWidth/itemWidth);\n        const dataSource = props.dataSource.map((item,index)=>{\n            const newData = {}\n            const left = (index%rowNum)*itemWidth\n            const top = parseInt((index/rowNum))*itemHeight\n\n            newData.data = item\n            newData.originIndex = index\n            newData.originLeft = left\n            newData.originTop = top\n            newData.position = new Animated.ValueXY({\n                x: parseInt(left+0.5),\n                y: parseInt(top+0.5),\n            })\n            newData.scaleValue = new Animated.Value(1)\n            return newData\n        })\n\n        if (isInit) {\n            this.state = {\n                scrollEnabled: true,\n                dataSource: dataSource,\n                height: Math.ceil(dataSource.length/rowNum)*itemHeight\n            }\n        } else {\n            this.setState({\n                dataSource: dataSource,\n                height: Math.ceil(dataSource.length/rowNum)*itemHeight\n            })\n        }\n\n    }\n\n    getOriginalData () {\n        return this.state.dataSource.map((item,index)=> item.data)\n    }\n\n    isStartupAuto = () => {\n        if (this.curScrollData == null) {\n            return false;\n        }\n        return true;\n    }\n\n    scrollTo = (height, animated = true) => {\n        // Prevent iOS from sliding when elastically sliding negative numbers\n        if (this.curScrollData) {\n            if (this.autoObj.forceScrollStatus < 0 && this.curScrollData.offsetY <= 0) {\n                this.autoObj.scrollDy = 0; // Correcting data system deviations\n                return;\n            } else if (this.autoObj.forceScrollStatus > 0 && this.curScrollData.windowHeight + this.curScrollData.offsetY >= this.curScrollData.totalHeight) {\n                this.autoObj.scrollDy = this.curScrollData.offsetY; //Correcting data system deviations\n                return;\n            }\n            //Barrel effect, the slowest is 1.x1\n            this.curScrollData.hasScroll = false;\n        }\n        this.scrollRef && this.scrollRef.scrollTo({x: 0, y: height, animated});\n    }\n\n    onScrollListener = (event) => {\n        const nativeEvent = event.nativeEvent\n        this.curScrollData = {\n            totalHeight: nativeEvent.contentSize.height,\n            windowHeight: nativeEvent.layoutMeasurement.height,\n            offsetY: nativeEvent.contentOffset.y,\n            hasScroll: true,\n        }\n        if (nativeEvent.contentOffset.y !== 0) this.isHasMeasure = true;\n        if (this.props.onScrollListener) this.props.onScrollListener(event)\n    }\n\n    render() {\n        return (\n            <ScrollView\n                bounces={false}\n                scrollEventThrottle={1}\n                scrollIndicatorInsets={this.props.scrollIndicatorInsets}\n                ref={(scrollRef)=> {\n                    if (this.props.onScrollRef) this.props.onScrollRef(scrollRef)\n                    this.scrollRef = scrollRef\n                    return this.scrollRef\n                }}\n                scrollEnabled = {this.state.scrollEnabled}\n                onScroll={this.onScrollListener}\n                style={styles.container}>  \n                {this.props.renderHeaderView ? this.props.renderHeaderView : null} \n                <View\n                    //ref={(ref)=>this.sortParentRef=ref}\n                    style={[styles.swipe,{\n                        width: this.props.parentWidth,\n                        height: this.state.height,\n                    }]}\n                    //onLayout={()=> {}}\n                    >\n                    {this._renderItemView()}\n                </View>\n                {this.props.renderBottomView ? this.props.renderBottomView : null}\n            </ScrollView>\n        )\n    }\n\n    _getKey = (index) => {\n        const item = this.state.dataSource[index];\n        return this.props.keyExtractor ? this.props.keyExtractor(item.data, index) : item.originIndex;\n    }\n\n    _renderItemView = () => {\n        const {maxScale, minOpacity} = this.props\n        const inputRange = maxScale >= 1 ? [1, maxScale] : [maxScale, 1]\n        const outputRange = maxScale >= 1 ? [1, minOpacity] : [minOpacity, 1]\n        return this.state.dataSource.map((item,index)=>{\n            const transformObj = {}\n            transformObj[this.props.scaleStatus] = item.scaleValue\n            const key = this.props.keyExtractor ? this.props.keyExtractor(item.data,index) : item.originIndex\n            return (\n                <Animated.View\n                    key={key}\n                    ref={(ref) => this.sortRefs.set(key,ref)}\n                    {...this._panResponder.panHandlers}\n                    style={[styles.item,{\n                        marginTop: this.props.marginChildrenTop,\n                        marginBottom: this.props.marginChildrenBottom,\n                        marginLeft: this.props.marginChildrenLeft,\n                        marginRight: this.props.marginChildrenRight,\n                        left: item.position.x,\n                        top: item.position.y,\n                        opacity: item.scaleValue.interpolate({inputRange,outputRange}),\n                        transform: [transformObj]\n                    }]}>\n                    <TouchableOpacity\n                        activeOpacity = {1}\n                        delayLongPress={this.props.delayLongPress}\n                        onPressOut={()=> this.onPressOut()}\n                        onLongPress={()=>this.startTouch(index)}\n                        onPress={()=>{\n                            if (this.props.onClickItem) {\n                                this.isHasMeasure = true\n                                this.props.onClickItem(this.getOriginalData(),item.data,index)\n                            }\n                        }}>\n                        {this.props.renderItem(item.data,index)}\n                    </TouchableOpacity>\n                </Animated.View>\n            )\n        })\n    }\n\n    componentWillUnmount() {\n        if (this.isScaleRecovery) clearTimeout(this.isScaleRecovery)\n        this.clearAutoInterval()\n    }\n\n}\n\nAutoDragSortableView.propTypes = {\n    dataSource: PropTypes.array.isRequired,\n    parentWidth: PropTypes.number,\n    childrenHeight: PropTypes.number.isRequired,\n    childrenWidth: PropTypes.number.isRequired,\n\n    marginChildrenTop: PropTypes.number,\n    marginChildrenBottom: PropTypes.number,\n    marginChildrenLeft: PropTypes.number,\n    marginChildrenRight: PropTypes.number,\n\n    sortable: PropTypes.bool,\n\n    onClickItem: PropTypes.func,\n    onDragStart: PropTypes.func,\n    onDragEnd: PropTypes.func,\n    onDataChange: PropTypes.func,\n    renderItem: PropTypes.func.isRequired,\n    scaleStatus: PropTypes.oneOf(['scale','scaleX','scaleY']),\n    fixedItems: PropTypes.array,\n    keyExtractor: PropTypes.func,\n    delayLongPress: PropTypes.number,\n    isDragFreely: PropTypes.bool,\n    onDragging: PropTypes.func,\n    maxScale: PropTypes.number,\n    minOpacity: PropTypes.number,\n    scaleDuration: PropTypes.number,\n    slideDuration: PropTypes.number,\n    autoThrottle: PropTypes.number,\n    autoThrottleDuration: PropTypes.number,\n    renderHeaderView: PropTypes.element,\n    scrollIndicatorInsets: PropTypes.shape({\n      top: PropTypes.number,\n      left: PropTypes.number,\n      bottom: PropTypes.number,\n      right: PropTypes.number,\n    }),\n    headerViewHeight: PropTypes.number,\n    renderBottomView: PropTypes.element,\n    bottomViewHeight: PropTypes.number,\n    onScrollListener: PropTypes.func,\n    onScrollRef: PropTypes.func\n}\n\nAutoDragSortableView.defaultProps = {\n    marginChildrenTop: 0,\n    marginChildrenBottom: 0,\n    marginChildrenLeft: 0,\n    marginChildrenRight: 0,\n    parentWidth: width,\n    sortable: true,\n    scaleStatus: 'scale',\n    fixedItems: [],\n    isDragFreely: false,\n    maxScale: 1.1,\n    minOpacity: 0.8,\n    scaleDuration: 100,\n    slideDuration: 300,\n    autoThrottle: 2,\n    autoThrottleDuration: 10,\n    scrollIndicatorInsets: {\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 1,\n    },\n    headerViewHeight: 0,\n    bottomViewHeight: 0,\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n    swipe: {\n        flexWrap: 'wrap',\n        flexDirection: 'row',\n    },\n    item: {\n        position: 'absolute',\n        zIndex: defaultZIndex,\n    },\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}